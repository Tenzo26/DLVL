[{"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\index.js":"1","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\Routes.js":"2","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\Signup.js":"3","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\Signin.js":"4","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\AdminDashboard.js":"5","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\Profile.js":"6","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\userFAQ.js":"7","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\ForgotPassword.js":"8","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\SignupAdmin.js":"9","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\userFeedback.js":"10","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\UserDashboard.js":"11","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\UserUpdateFeedback.js":"12","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Shop.js":"13","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Home.js":"14","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Product.js":"15","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Cart.js":"16","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\auth\\PrivateRoute.js":"17","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\auth\\AdminRoute.js":"18","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\AddProduct.js":"19","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\AddCategory.js":"20","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\Orders.js":"21","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\UpdateProduct.js":"22","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\ManageProducts.js":"23","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\AdminFAQ.js":"24","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\adminFeedback.js":"25","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\UpdateAboutUs.js":"26","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\AdminUpdateFeedback.js":"27","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\UpdateBackground.js":"28","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Layout.js":"29","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\apiUser.js":"30","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\apiCore.js":"31","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\apiAdmin.js":"32","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\cartHelpers.js":"33","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\FaqTable.js":"34","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\FeedbackTable.js":"35","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Checkout.js":"36","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\auth\\index.js":"37","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Card.js":"38","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Search.js":"39","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Checkbox.js":"40","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\RadioBox.js":"41","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\fixedPrices.js":"42","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\config.js":"43","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Menu.js":"44","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\ShowImage.js":"45"},{"size":160,"mtime":1615971607000,"results":"46","hashOfConfig":"47"},{"size":3449,"mtime":1615971607000,"results":"48","hashOfConfig":"47"},{"size":5298,"mtime":1615971607000,"results":"49","hashOfConfig":"47"},{"size":2741,"mtime":1615971607000,"results":"50","hashOfConfig":"47"},{"size":2302,"mtime":1615971607000,"results":"51","hashOfConfig":"47"},{"size":2549,"mtime":1615971607000,"results":"52","hashOfConfig":"47"},{"size":998,"mtime":1615971607000,"results":"53","hashOfConfig":"47"},{"size":6430,"mtime":1615971607000,"results":"54","hashOfConfig":"47"},{"size":5324,"mtime":1615971607000,"results":"55","hashOfConfig":"47"},{"size":5043,"mtime":1615971607000,"results":"56","hashOfConfig":"47"},{"size":2911,"mtime":1615971607000,"results":"57","hashOfConfig":"47"},{"size":1349,"mtime":1615971607000,"results":"58","hashOfConfig":"47"},{"size":4855,"mtime":1615971607000,"results":"59","hashOfConfig":"47"},{"size":1595,"mtime":1615971607000,"results":"60","hashOfConfig":"47"},{"size":2045,"mtime":1615971607000,"results":"61","hashOfConfig":"47"},{"size":2525,"mtime":1615971607000,"results":"62","hashOfConfig":"47"},{"size":456,"mtime":1615971607000,"results":"63","hashOfConfig":"47"},{"size":489,"mtime":1615971607000,"results":"64","hashOfConfig":"47"},{"size":10366,"mtime":1615971607000,"results":"65","hashOfConfig":"47"},{"size":2380,"mtime":1615971607000,"results":"66","hashOfConfig":"47"},{"size":5446,"mtime":1615971607000,"results":"67","hashOfConfig":"47"},{"size":9906,"mtime":1615971607000,"results":"68","hashOfConfig":"47"},{"size":5020,"mtime":1615971607000,"results":"69","hashOfConfig":"47"},{"size":426,"mtime":1615971607000,"results":"70","hashOfConfig":"47"},{"size":1687,"mtime":1615971607000,"results":"71","hashOfConfig":"47"},{"size":2220,"mtime":1615971607000,"results":"72","hashOfConfig":"47"},{"size":1845,"mtime":1615971607000,"results":"73","hashOfConfig":"47"},{"size":2644,"mtime":1615971607000,"results":"74","hashOfConfig":"47"},{"size":690,"mtime":1615971607000,"results":"75","hashOfConfig":"47"},{"size":1694,"mtime":1615971607000,"results":"76","hashOfConfig":"47"},{"size":4038,"mtime":1615971607000,"results":"77","hashOfConfig":"47"},{"size":7896,"mtime":1615974932483,"results":"78","hashOfConfig":"47"},{"size":5904,"mtime":1615971607000,"results":"79","hashOfConfig":"47"},{"size":4383,"mtime":1615971607000,"results":"80","hashOfConfig":"47"},{"size":1287,"mtime":1615971607000,"results":"81","hashOfConfig":"47"},{"size":7280,"mtime":1615971607000,"results":"82","hashOfConfig":"47"},{"size":2360,"mtime":1615971607000,"results":"83","hashOfConfig":"47"},{"size":4043,"mtime":1615971607000,"results":"84","hashOfConfig":"47"},{"size":3892,"mtime":1615971607000,"results":"85","hashOfConfig":"47"},{"size":960,"mtime":1615971607000,"results":"86","hashOfConfig":"47"},{"size":573,"mtime":1615971607000,"results":"87","hashOfConfig":"47"},{"size":544,"mtime":1615971607000,"results":"88","hashOfConfig":"47"},{"size":49,"mtime":1615971607000,"results":"89","hashOfConfig":"47"},{"size":3147,"mtime":1615971607000,"results":"90","hashOfConfig":"47"},{"size":345,"mtime":1615971607000,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"15xbn6a",{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"94"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"94"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\index.js",[],["210","211"],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\Routes.js",["212","213"],"import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Signup from \"./user/Signup\";\nimport Signin from \"./user/Signin\";\nimport Home from \"./core/Home\";\nimport PrivateRoute from \"./auth/PrivateRoute\";\nimport AdminRoute from \"./auth/AdminRoute\";\nimport Dashboard from \"./user/UserDashboard\";\nimport AdminDashboard from \"./user/AdminDashboard\";\nimport AddCategory from \"./admin/AddCategory\";\nimport AddProduct from \"./admin/AddProduct\";\nimport Orders from \"./admin/Orders\";\nimport Shop from \"./core/Shop\";\nimport Product from \"./core/Product\";\nimport Cart from \"./core/Cart\";\nimport Profile from \"./user/Profile\";\nimport ManageProducts from \"./admin/ManageProducts\";\nimport UpdateProduct from \"./admin/UpdateProduct\";\nimport FAQ from \"./user/userFAQ\";\nimport Feedback from \"./user/userFeedback\";\nimport AdminFAQ from \"./admin/AdminFAQ\";\nimport userFAQ from \"./user/userFAQ\";\nimport userFeedback from \"./user/userFeedback\";\nimport adminFeedback from \"./admin/adminFeedback\";\nimport ForgotPassword from \"./user/ForgotPassword\";\nimport AdminUpdateFeedback from \"./admin/AdminUpdateFeedback\";\nimport UserUpdateFeedback from \"./user/UserUpdateFeedback\";\nimport SignupAdmin from \"./user/SignupAdmin\";\nimport UpdateBackground from \"./admin/UpdateBackground\";\nimport UpdateAboutUs from \"./admin/UpdateAboutUs\";\n\nconst Routes = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t<Route path=\"/shop\" exact component={Shop} />\n\t\t\t\t<Route path=\"/signin\" exact component={Signin} />\n\t\t\t\t<Route path=\"/signup\" exact component={Signup} />\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/signup/admin/SecretAdminSignup\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={SignupAdmin}\n\t\t\t\t/>\n\t\t\t\t<Route path=\"/forgot\" exact component={ForgotPassword} />\n\t\t\t\t<Route path=\"/product/:productId\" exact component={Product} />\n\t\t\t\t<PrivateRoute\n\t\t\t\t\tpath=\"/user/dashboard\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={Dashboard}\n\t\t\t\t/>\n\t\t\t\t<PrivateRoute\n\t\t\t\t\tpath=\"/user/userFeedback/:userId/:feedbackId\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={UserUpdateFeedback}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/adminFeedback/:feedbackId\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={AdminUpdateFeedback}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/dashboard\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={AdminDashboard}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/create/category\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={AddCategory}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/create/product\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={AddProduct}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute path=\"/admin/orders\" exact component={Orders} />\n\t\t\t\t<PrivateRoute path=\"/cart\" exact component={Cart} />\n\t\t\t\t<Route path=\"/user/userFAQ\" exact component={userFAQ} />\n\t\t\t\t<AdminRoute path=\"/admin/AdminFAQ\" exact component={AdminFAQ} />\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/user/userFeedback\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={userFeedback}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/adminFeedback\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={adminFeedback}\n\t\t\t\t/>\n\t\t\t\t<PrivateRoute\n\t\t\t\t\tpath=\"/profile/:userId\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={Profile}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/products\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={ManageProducts}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/product/update/:productId\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={UpdateProduct}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/updateBackground\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={UpdateBackground}\n\t\t\t\t/>\n\t\t\t\t<AdminRoute\n\t\t\t\t\tpath=\"/admin/UpdateAboutUs\"\n\t\t\t\t\texact\n\t\t\t\t\tcomponent={UpdateAboutUs}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default Routes;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\Signup.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\Signin.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\AdminDashboard.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\Profile.js",["214","215","216","217"],"import React, { useState, useEffect, useImperativeHandle } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = ({ match }) => {\n\tconst [values, setValues] = useState({\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\terror: false,\n\t\tsuccess: false,\n\t});\n\n\tconst { token } = isAuthenticated();\n\n\tconst { name, email, password, error, success } = values;\n\n\tconst init = (userId) => {\n\t\tread(userId, token).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetValues({ ...values, error: true });\n\t\t\t} else {\n\t\t\t\tsetValues({ ...values, name: data.name, email: data.email });\n\t\t\t}\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tinit(match.params.userId);\n\t}, []);\n\n\tconst handleChange = (name) => (e) => {\n\t\tsetValues({ ...values, error: false, [name]: e.target.value });\n\t};\n\n\tconst clickSubmit = (e) => {\n\t\te.preventDefault();\n\t\tupdate(match.params.userId, token, { name, email, password }).then(\n\t\t\t(data) => {\n\t\t\t\tif (data.error) {\n\t\t\t\t\tconsole.log(data.error);\n\t\t\t\t} else {\n\t\t\t\t\tupdateUser(data, () => {\n\t\t\t\t\t\tsetValues({\n\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\t\temail: data.email,\n\t\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tconst redirectUser = (success) => {\n\t\tif (success) {\n\t\t\treturn <Redirect to=\"/cart\" />;\n\t\t}\n\t};\n\n\tconst profileUpdate = (name, email, password) => {\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={handleChange(\"name\")}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">Email</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tonChange={handleChange(\"email\")}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tonChange={handleChange(\"name\")}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<button className=\"btn btn-primary\" onClick={clickSubmit}>\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Update Profile\"\n\t\t\tdescription=\"Update your profile here\"\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<h2 className=\"mb-4\">Profile Update</h2>\n\t\t\t{profileUpdate(name, email, password)}\n\t\t\t{redirectUser(success)}\n\t\t\t{JSON.stringify(values)}\n\t\t</Layout>\n\t);\n};\n\nexport default Profile;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\userFAQ.js",["218","219"],"/* eslint-disable react-hooks/rules-of-hooks */\nimport Layout from \"../core/Layout\";\nimport { useState, useEffect } from \"react\";\nimport { Collapse } from \"antd\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getFaq } from \"../admin/apiAdmin\";\n\nconst { Panel } = Collapse;\n\nconst userFAQ = () => {\n\tconst [faq, setFaq] = useState([]);\n\t\t\n\n\tuseEffect(() => {\n\t\tconst fetchFaq = async () => {\n\t\t\tconst res = await getFaq();\n\t\t\tconst { data: result } = res;\n\t\t\tsetFaq(result.result);\n\t\t};\n\n\t\tfetchFaq();\n\n\t\treturn () => {\n\t\t\tsetFaq([]);\n\t\t};\n\t}, []);\n\n\tconst renderFaq = () => {\n\t\treturn faq.map((item) => (\n\t\t\t<Panel\n\t\t\t header={item.title}\n\t\t\t\n\t\t\tkey={item.id}>\n\t\t\t\t\n\t\t\t\t<p>{item.content}</p>\n\t\t\t\t\n\t\t\t</Panel>\n\t\t));\n\t};\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"FAQS\"\n\t\t\tdescription={`Frequently Asked Questions`}\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<Collapse defaultActiveKey={[\"0\"]}>{renderFaq()}</Collapse>\n\t\t\t\n\t\t</Layout>\n\t\t\n\t);\n};\n\nexport default userFAQ;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\ForgotPassword.js",["220"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../core/Layout\";\nimport { forgot1, forgot2 } from \"../auth\";\n\nconst Reset = () => {\n\tconst [values, setValues] = useState({\n\t\tstep: 1,\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tconfirm_password: \"\",\n\t\tuser: null, // store user id here (reseit using email),\n\t\tuserId: null,\n\t\tquestions: {},\n\t\tanswer_1: \"\",\n\t\tanswer_2: \"\",\n\t\tanswer_3: \"\",\n\t\terror: false,\n\t\tmessage: \"\",\n\t\tsuccess: false,\n\t});\n\n\tconst {\n\t\temail,\n\t\tpassword,\n\t\tconfirm_password,\n\t\terror,\n\t\tsuccess,\n\t\tquestions,\n\t\tmessage,\n\t\tuser,\n\t\tuserId,\n\t\tanswer_1,\n\t\tanswer_2,\n\t\tanswer_3,\n\t} = values;\n\n\tconst handleChange = (name) => (event) => {\n\t\tsetValues({ ...values, error: false, [name]: event.target.value });\n\t};\n\n\tconst Step1Form = () => (\n\t\t<form onSubmit={step1Submit}>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"text-muted\">Email</label>\n\t\t\t\t<input\n\t\t\t\t\tonChange={handleChange(\"email\")}\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<Link\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\tsetValues({\n\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\tstep: 4,\n\t\t\t\t\t\t\temail: \"\",\n\t\t\t\t\t\t\tuserId: \"\",\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tReset your password using ID\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t<button className=\"btn btn-primary\">Submit</button>\n\t\t</form>\n\t);\n\n\tconst step1Submit = async (e) => {\n\t\te.preventDefault();\n\t\tconst res = await forgot1({ email });\n\t\tconst { message, error, questions, userId } = res.data;\n\n\t\tif (error) {\n\t\t\tsetValues({ ...values, error: message });\n\t\t\treturn;\n\t\t}\n\n\t\tsetValues({\n\t\t\t...values,\n\t\t\tquestions: { ...questions },\n\t\t\tuser: userId,\n\t\t\tstep: 2,\n\t\t});\n\t};\n\n\tconst step2Form = () => {\n\t\treturn (\n\t\t\t<form onSubmit={step2Submit}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">Question 1:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={questions.q1.question}\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"answer_1\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tonChange={handleChange(\"answer_1\")}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">Question 2:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={questions.q2.question}\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"answer_2\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tonChange={handleChange(\"answer_2\")}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">Question 3:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={questions.q3.question}\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"answer_3\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tonChange={handleChange(\"answer_3\")}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<button className=\"btn btn-primary\">Submit</button>\n\t\t\t</form>\n\t\t);\n\t};\n\n\tconst step2Submit = (e) => {\n\t\te.preventDefault();\n\t\tlet correctAnswer = 0;\n\n\t\tfor (let key in questions) {\n\t\t\tconst { answer } = questions[key];\n\n\t\t\tswitch (answer) {\n\t\t\t\tcase answer_1:\n\t\t\t\t\tcorrectAnswer++;\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcase answer_2:\n\t\t\t\t\tcorrectAnswer++;\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcase answer_3:\n\t\t\t\t\tcorrectAnswer++;\n\t\t\t\t\tcontinue;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (correctAnswer < 3) {\n\t\t\tsetValues({ ...values, error: \"Incorrect\" });\n\t\t\treturn;\n\t\t}\n\n\t\tsetValues({ ...values, step: 3 });\n\t};\n\n\tconst Step3Form = () => (\n\t\t<form onSubmit={step3Submit}>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"text-muted\">New Password</label>\n\t\t\t\t<input\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tonChange={handleChange(\"password\")}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"text-muted\">Confirm New Password</label>\n\t\t\t\t<input\n\t\t\t\t\tname=\"confirm_password\"\n\t\t\t\t\tonChange={handleChange(\"confirm_password\")}\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={confirm_password}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<button className=\"btn btn-primary\">Submit</button>\n\t\t</form>\n\t);\n\n\tconst step3Submit = async (e) => {\n\t\te.preventDefault();\n\n\t\tif (password !== confirm_password) {\n\t\t\tsetValues({ ...values, error: \"Incorrect Password\" });\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst res = await forgot2(user, password);\n\t\t\tconst { data } = res;\n\t\t\tsetValues({\n\t\t\t\t...values,\n\t\t\t\tmessage: data.message,\n\t\t\t\tsuccess: true,\n\t\t\t\tpassword: \"\",\n\t\t\t\tconfirm_password: \"\",\n\t\t\t\tstep: 5,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tsetValues({ ...values, error: \"Something went wrong.\" });\n\t\t}\n\t};\n\n\tconst resetWithUserId = () => {\n\t\treturn (\n\t\t\t<form onSubmit={resetWithUserIdSubmit}>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label className=\"text-muted\">User ID</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname=\"userId\"\n\t\t\t\t\t\tonChange={handleChange(\"userId\")}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={userId}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tsetValues({\n\t\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\t\tstep: 1,\n\t\t\t\t\t\t\t\temail: \"\",\n\t\t\t\t\t\t\t\tuserId: \"\",\n\t\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset your password using Email\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"btn btn-primary\">Submit</button>\n\t\t\t</form>\n\t\t);\n\t};\n\n\tconst resetWithUserIdSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst res = await forgot1(null, userId);\n\t\tconst { message, error } = res.data;\n\n\t\tif (error) {\n\t\t\tsetValues({ ...values, error: message });\n\t\t\treturn;\n\t\t}\n\n\t\tsetValues({\n\t\t\t...values,\n\n\t\t\tuser: userId,\n\t\t\tstep: 3,\n\t\t});\n\t};\n\n\tconst renderForms = () => {\n\t\tswitch (values.step) {\n\t\t\tcase 1:\n\t\t\t\treturn Step1Form();\n\n\t\t\tcase 2:\n\t\t\t\treturn step2Form();\n\n\t\t\tcase 3:\n\t\t\t\treturn Step3Form();\n\n\t\t\tcase 4:\n\t\t\t\treturn resetWithUserId();\n\n\t\t\tcase 5:\n\t\t\t\treturn showSuccess();\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\t};\n\n\tconst showError = () => (\n\t\t<div\n\t\t\tclassName=\"alert alert-danger\"\n\t\t\tstyle={{ display: error ? \"\" : \"none\" }}\n\t\t>\n\t\t\t{error}\n\t\t</div>\n\t);\n\n\tconst showSuccess = () => (\n\t\t<div\n\t\t\tclassName=\"alert alert-info\"\n\t\t\tstyle={{ display: success ? \"\" : \"none\" }}\n\t\t>\n\t\t\t{`${message}. Please `}\n\t\t\t<Link to=\"/signin\">Sign In</Link> to continue.\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Password Reset\"\n\t\t\tdescription=\"Password Reset for DLVL Studios\"\n\t\t\tclassName=\"container col-md-8 offset-md-2\"\n\t\t>\n\t\t\t{showError()}\n\t\t\t{renderForms()}\n\t\t</Layout>\n\t);\n};\n\nexport default Reset;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\SignupAdmin.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\userFeedback.js",["221","222"],"/* eslint-disable no-restricted-globals */\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n\tComment,\n\tTooltip,\n\tAvatar,\n\tInput,\n\tForm,\n\tButton,\n\tPagination,\n\tTable,\n} from \"antd\";\nimport moment from \"moment\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { deleteFeedback, createFeedback } from \"../admin/apiAdmin\";\nimport { getPublishedFeedback } from \"../user/apiUser\";\n\n\nconst userFeedback = () => {\n\tconst [feedback, setFeedback] = useState([]);\n\tconst [currentItems, setCurrentItems] = useState([]);\n\tconst [currentPage, setCurrentPage] = useState(1);\n\n\tconst paginate = () => {\n\t\tconst indexOfLastPost = currentPage * 5;\n\t\tconst indexOfFirstPost = indexOfLastPost - 5;\n\n\t\tconst currentFeedback = feedback.slice(\n\t\t\tindexOfFirstPost,\n\t\t\tindexOfLastPost\n\t\t);\n\n\t\tsetCurrentItems(currentFeedback);\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetchFeedback = async () => {\n\t\t\tconst res = await getPublishedFeedback();\n\t\t\tsetFeedback(res.data.result);\n\t\t};\n\n\t\tfetchFeedback();\n\n\t\treturn () => {\n\t\t\tsetFeedback([]);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tpaginate();\n\t}, [currentPage, feedback]);\n\n\tconst handleChangePage = (page) => {\n\t\tconsole.log(currentItems);\n\t\tsetCurrentPage(page);\n\t\t// paginate();\n\t};\n\n\tconst renderFeedback = () => {\n\t\treturn currentItems.map((item) => (\n\t\t\t<FeedbackCard\n\t\t\t\tuserId={item.user._id}\n\t\t\t\tfeedbackId={item._id}\n\t\t\t\tkey={item._id}\n\t\t\t\tcontent={item.content}\n\t\t\t\tname={item.user.name}\n\t\t\t\tdate={item.updatedAt}\n\t\t\t/>\n\t\t));\n\t};\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Feedbacks\"\n\t\t\tdescription={` Welcome to the Feedback page `}\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<div className=\"userFeedback\">\n\t\t\t\t<div className=\"userFeedback__container\">\n\t\t\t\t\t{renderFeedback()}\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tdefaultPageSize={5}\n\t\t\t\t\t\tstyle={{ margin: \"25px 0\" }}\n\t\t\t\t\t\tdefaultCurrent={currentPage}\n\t\t\t\t\t\ttotal={feedback.length}\n\t\t\t\t\t\tonChange={handleChangePage}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"userFeedback__form\">\n\t\t\t\t\t<FeedbackForm />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nconst FeedbackCard = ({ userId, feedbackId, name, content, date }) => {\n\tconst auth = isAuthenticated();\n\n\tif (auth) {\n\t\tconst {\n\t\t\tuser: { _id, role },\n\t\t} = isAuthenticated();\n\n\t\tconst handleDelete = () => {\n\t\t\tdeleteFeedback(feedbackId, null);\n\t\t\tlocation.reload();\n\t\t};\n\n\t\tconst renderAction = () => {\n\t\t\tlet actions = [];\n\n\t\t\tif (role === 1 && _id === userId) {\n\t\t\t\tactions.push(\n\t\t\t\t\t<Link to={`/admin/adminFeedback/${feedbackId}`}>\n\t\t\t\t\t\t<span className=\"comment-action\">Edit</span>\n\t\t\t\t\t</Link>,\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"#\"\n\t\t\t\t\t\tonClick={() => handleDelete()}\n\t\t\t\t\t\tstyle={{ marginLeft: \"15px\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"comment-action\">Delete</span>\n\t\t\t\t\t</Link>\n\t\t\t\t);\n\t\t\t} else if (role === 0 && _id === userId) {\n\t\t\t\tactions.push(\n\t\t\t\t\t<Link to={`/user/userFeedback/${_id}/${feedbackId}`}>\n\t\t\t\t\t\t<span className=\"comment-action\">Edit</span>\n\t\t\t\t\t</Link>,\n\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"#\"\n\t\t\t\t\t\tonClick={() => handleDelete()}\n\t\t\t\t\t\tstyle={{ marginLeft: \"15px\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"comment-action\">Delete</span>\n\t\t\t\t\t</Link>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn actions;\n\t\t};\n\n\t\treturn (\n\t\t\t<Comment\n\t\t\t\tstyle={{\n\t\t\t\t\tboxShadow: \"1px 1px 10px rgba(0, 0, 0, 0.1)\",\n\t\t\t\t\tpadding: \"12px\",\n\t\t\t\t\tmarginTop: \"15px\",\n\t\t\t\t}}\n\t\t\t\tactions={renderAction()}\n\t\t\t\tauthor={name}\n\t\t\t\tavatar={<Avatar alt={name}>{name}</Avatar>}\n\t\t\t\tcontent={<p>{content}</p>}\n\t\t\t\tdatetime={\n\t\t\t\t\t<Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\n\t\t\t\t\t\t<span>{moment(date).fromNow()}</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Comment\n\t\t\t\tauthor={name}\n\t\t\t\tavatar={<Avatar alt={name}>{name}</Avatar>}\n\t\t\t\tcontent={<p>{content}</p>}\n\t\t\t\tdatetime={\n\t\t\t\t\t<Tooltip title={moment().format(\"YYYY-MM-DD HH:mm:ss\")}>\n\t\t\t\t\t\t<span>{moment(date).fromNow()}</span>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t}\n\t\t\t/>\n\t\t);\n\t}\n};\n\nconst FeedbackForm = () => {\n\tconst history = useHistory();\n\tconst [form] = Form.useForm();\n\tconst { TextArea } = Input;\n\n\tconst onReset = () => {\n\t\tform.resetFields();\n\t};\n\n\tconst onFinish = async () => {\n\t\tif (!isAuthenticated()) {\n\t\t\thistory.push(\"/signin\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\ttoken,\n\t\t\tuser: { _id },\n\t\t} = isAuthenticated();\n\n\t\ttry {\n\t\t\tlet values = await form.validateFields();\n\t\t\tcreateFeedback(token, _id, values.Feedback)\n\t\t\tonReset();\n\t\t} catch (errInfo) {\n\t\t\tconsole.log(\"Error:\", errInfo);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Form form={form} layout=\"horizontal\" onFinish={onFinish}>\n\t\t\t<Form.Item\n\t\t\t\tstyle={{\n\t\t\t\tmarginTop: 16,\n\t\t\t\t}}\n\t\t\t\tname=\"Feedback\"\n\t\t\t\tlabel=\"Feedback\"\n\t\t\t\tlabelCol={{\n\t\t\t\t\tspan: 6,\n\t\t\t\t}}\n\t\t\t\twrapperCol={{\n\t\t\t\t\tspan: 16,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<TextArea rows={6} />\n\t\t</Form.Item>\n\n\t\t<Form.Item\n\t\t\t\twrapperCol={{\n\t\t\t\t\tspan: 14,\n\t\t\t\t\toffset: 6,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Button htmlType=\"submit\" type=\"primary\">\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t\t<Button htmlType=\"button\" onClick={onReset}>\n\t\t\t\t\tReset\n\t\t\t\t</Button>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t);\n};\n\nexport default userFeedback;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\UserDashboard.js",["223"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { getPurchaseHistory } from \"./apiUser\";\nimport moment from \"moment\";\n\nconst Dashboard = () => {\n\tconst [history, setHistory] = useState([]);\n\n\tconst {\n\t\tuser: { _id, name, email, role },\n\t} = isAuthenticated();\n\n\tconst token = isAuthenticated().token;\n\n\tconst init = (userId, token) => {\n\t\tgetPurchaseHistory(userId, token).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tconsole.log(data.error);\n\t\t\t} else {\n\t\t\t\tsetHistory(data);\n\t\t\t}\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tinit(_id, token);\n\t}, []);\n\n\tconst userLinks = () => {\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<h4 className=\"card-header\">User Links</h4>\n\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/cart\">\n\t\t\t\t\t\t\tMy Cart\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t<Link className=\"nav-link\" to={`/profile/${_id}`}>\n\t\t\t\t\t\t\tUpdate Profile\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/user/userFAQ\">\n\t\t\t\t\t\t\tView FAQs\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/user/userFeedback\">\n\t\t\t\t\t\t\tSubmit/View Feedbacks\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst userInfo = () => {\n\t\treturn (\n\t\t\t<div className=\"card mb-5\">\n\t\t\t\t<h3 className=\"card-header\">User Information</h3>\n\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t<li className=\"list-group-item\">{_id}</li>\n\t\t\t\t\t<li className=\"list-group-item\">{name}</li>\n\t\t\t\t\t<li className=\"list-group-item\">{email}</li>\n\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t{role === 1 ? \"Administrator\" : \"Registered User\"}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst purchaseHistory = (history) => {\n\t\treturn (\n\t\t\t<div className=\"card mb-5\">\n\t\t\t\t<h3 className=\"card-header\">Purchase history</h3>\n\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t<li className=\"list-group-item\">\n\t\t\t\t\t\t{history.map((h, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t\t\t\t{h.products.map((p, i) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h6>Product name: {p.name}</h6>\n\t\t\t\t\t\t\t\t\t\t\t\t<h6>\n\t\t\t\t\t\t\t\t\t\t\t\t\tProduct price: ${p.price}\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t\t\t\t\t<h6>\n\t\t\t\t\t\t\t\t\t\t\t\t\tPurchased date:{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{moment(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tp.createdAt\n\t\t\t\t\t\t\t\t\t\t\t\t\t).fromNow()}\n\t\t\t\t\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Dashboard\"\n\t\t\tdescription={`Welcome back, ${name}!`}\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-3\">{userLinks()}</div>\n\n\t\t\t\t<div className=\"col-9\">\n\t\t\t\t\t{userInfo()}\n\t\t\t\t\t{purchaseHistory(history)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Dashboard;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\UserUpdateFeedback.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Shop.js",["224","225","226","227"],"import React, {useState, useEffect} from 'react';\nimport Layout from './Layout';\nimport {getCategories, getFilteredProducts, getCollections} from './apiCore';\nimport Card from './Card';\nimport Checkbox from './Checkbox';\nimport RadioBox from './RadioBox';\nimport {prices} from './fixedPrices';\n\nconst Shop = () => {\n    const [categories, setCategories] = useState([]);\n    const [collections, setCollections] = useState([]);\n    const [error, setError] = useState(false);\n    const [myFilters, setMyFilters] = useState({\n        filters: {\n            category: [],\n            collection: [],\n            price: []\n        }\n    });\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            }\n            else {\n                setCategories(data);\n                getCollections().then(data2 => {\n                    if (data2.error) {\n                        setError(data2.error);\n                    }\n                    else {\n                        setCollections(data2)\n                    }\n                });\n            }\n        });\n    };\n\n    const loadFilteredResults = (newFilters) => {\n        getFilteredProducts(skip, limit, newFilters)\n            .then (data => {\n                if (data.error) {\n                    setError(data.error);\n                }\n                else {\n                    setFilteredResults(data.data);\n                    setSize(data.size);\n                    setSkip(0);\n                }\n            });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        getFilteredProducts(toSkip, limit, myFilters.filters)\n            .then (data => {\n                if (data.error) {\n                    setError(data.error);\n                }\n                else {\n                    setFilteredResults([...filteredResults,...data.data]);\n                    setSize(data.size);\n                    setSkip(toSkip);\n                }\n            });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 && size >= limit && (\n                <button onClick = {loadMore} className = \"btn btn-warning mb-5\">Load More...</button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        const newFilters = {...myFilters};\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy == \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    \n\n    return (\n        <Layout title = \"Shop Now\" \n        description = \"DLVL Studios Official Website\"\n        className = \"container\">\n            <div className = \"row\">\n                <div className = \"col-4\">\n                <h4>Filter by categories</h4>\n                    <ul>\n                        <Checkbox categories = {categories} \n                        handleFilters = {filters =>\n                            handleFilters(filters,'category')}/>\n                    </ul>\n                \n                <h4>Filter by collection</h4>\n                <ul>\n                    <Checkbox categories = {collections} \n                    handleFilters = {filters =>\n                        handleFilters(filters,'_collection')}/>\n                </ul>\n\n                <h4>Filter by Price Range</h4>\n                <div>\n                    <RadioBox prices = {prices} \n                    handleFilters = {filters =>\n                        handleFilters(filters,'price')}/>\n                </div>\n                \n                </div>\n\n                <div className = \"col-8\">\n                    <h2 className = \"mb-4\">Products</h2>\n                    <div className = \"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key = {i} className = \"col-4 mb-3\">\n                                <Card  product = {product}/>\n                            </div>\n                        ))}\n                    </div>\n                    <hr/>\n                    {loadMoreButton()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\n\nexport default Shop;\n\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Home.js",["228","229"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport { getProducts, getBg } from \"./apiCore\";\nimport Card from \"./Card\";\nimport Search from \"./Search\";\n\nconst Home = () => {\n\tconst [productsBySell, setProductsBySell] = useState([]);\n\tconst [productsByArrival, setProductsByArrival] = useState([]);\n\tconst [error, setError] = useState(false);\n\tconst [desc, setDesc] = useState(\"\");\n\n\tconst loadProductsBySell = () => {\n\t\tgetProducts(\"sold\").then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetError(data.error);\n\t\t\t} else {\n\t\t\t\tsetProductsBySell(data);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst loadProductsByArrival = () => {\n\t\tgetProducts(\"createdAt\").then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetError(data.error);\n\t\t\t} else {\n\t\t\t\tsetProductsByArrival(data);\n\t\t\t}\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tgetBg().then((res) => {\n\t\t\tconsole.log(res);\n\t\t});\n\t\tloadProductsByArrival();\n\t\tloadProductsBySell();\n\t}, []);\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Home Page\"\n\t\t\tdescription={desc}\n\t\t\tclassName=\"container\"\n\t\t\thasBg={true}\n\t\t\timgSrc=\"http://localhost:8000/api/getBg\"\n\t\t>\n\t\t\t<Search />\n\t\t\t<div>\n\t\t\t\t<h2 className=\"mb-4\">New Arrivals</h2>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{productsByArrival.map((product, i) => (\n\t\t\t\t\t\t<div key={i} className=\"col-4 mb-3\">\n\t\t\t\t\t\t\t<Card product={product} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\n\t\t\t\t<h2 className=\"mb-4\">Best Sellers</h2>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{productsBySell.map((product, i) => (\n\t\t\t\t\t\t<div key={i} className=\"col-4 mb-3\">\n\t\t\t\t\t\t\t<Card product={product} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Home;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Product.js",["230"],"import React, {useState, useEffect} from 'react';\nimport Layout from './Layout';\nimport {read, listRelated} from './apiCore';\nimport Card from './Card';\n\nconst Product = (props) => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId)\n            .then(data => {\n                if (data.error) {\n                    setError(data.error);\n                }\n                else {\n                    setProduct(data);\n                    listRelated(data._id)\n                        .then(data => {\n                            if (data.error) {\n                                setError(data.error);\n                            }\n                            else {\n                                setRelatedProduct(data);\n                            }\n                        });\n                }\n            });\n    };\n\n    useEffect(() => {  \n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, [props]);\n\n    return (\n        <Layout title = {product && product.name}\n        description = {product && product.description && product.description.substring(0,100)}\n        className = \"container-fluid\">\n            <div className = \"row\">\n                <div className = \"col-8\">\n                    {product && \n                    product.description && \n                    product.description.substring(0,100)\n                    && <Card product = {product} showViewProductButton={false}/>}\n                </div>\n                <div className =\"col-4\">\n                    <h4>Related Products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className = \"mb-3\">\n                            <Card key = {i} product = {p}/>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n\n};\n\nexport default Product;","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Cart.js",["231","232","233"],"import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Layout from './Layout';\nimport Card from './Card';\nimport {getCart, removeItem, emptyCart, saveCart, syncCarttoCatalog} from './cartHelpers';\nimport Checkout from './Checkout';\nimport {isAuthenticated} from '../auth';\n\nconst Cart = () => {\n    const [items, setItems] = useState([]);\n    const [run, setRun] = useState(false);\n\n\n    useEffect(() => {\n        syncCarttoCatalog()\n        saveCart(isAuthenticated() && isAuthenticated().user._id, isAuthenticated() && isAuthenticated().token)\n        setItems(getCart());\n      }, [run]);\n\n    const showItems = items => {\n        return (\n            <div>\n                <h2>Your cart has {items.length} item{items.length == 1 ? '' : 's'}</h2>\n                <hr/>\n                    <div className = \"col-5\">\n                    {items.map((product, i) => (\n                        <div className=\"mb-2\" key={i}>\n                            <Card  \n                            product={product} \n                            showAddToCartButton = {false} \n                            cartUpdate = {true}\n                            showRemoveProductButton = {true}\n                            setRun={setRun}\n                            run={run}\n                            />\n                        </div>\n                    ))}\n                    </div>\n            </div>\n        );\n    }\n\n    const noItemsMessage = () => (\n        <h2>\n            Your cart is empty. <br/>\n            <Link to = \"/shop\">Continue shopping</Link>\n        </h2>\n    );\n\n    const showCheckoutColumn = () => {\n        return (\n            <span>\n            <h2 className = \"mb-4\">Your cart summary</h2>\n            <hr/>\n            <Checkout products = {items} setRun={setRun} run={run}/>\n            </span>\n        )\n    };\n\n    return (\n        <Layout title = \"Shopping Cart\" \n        description = \"Manage your Cart here\"\n        className = \"container-fluid\">\n            <div className = \"row\">\n                <div className = \"col-6\">\n                    {items.length > 0 ? \n                        showItems(items) :\n                        noItemsMessage()}\n                </div>\n\n                <div className = \"col-6\">\n                    {items.length > 0 ? showCheckoutColumn() : (\n                        <h2>Nothing to check out here...</h2>\n                    )}\n                </div>\n            </div>\n        </Layout>\n    );\n    \n};\n\n\n\nexport default Cart;","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\auth\\PrivateRoute.js",["234"],"import {React, Component} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {isAuthenticated} from './index';\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} \n    render = {props => \n        isAuthenticated() ? (\n        <Component {...props} />\n    ) : (\n        <Redirect to = {{pathname: '/signin', \n            state: {from: props.location}\n        }} />\n    )} />\n);\n\nexport default PrivateRoute;","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\auth\\AdminRoute.js",["235"],"import { React, Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n\t<Route\n\t\t{...rest}\n\t\trender={(props) =>\n\t\t\tisAuthenticated() && isAuthenticated().user.role === 1 ? (\n\t\t\t\t<Component {...props} />\n\t\t\t) : (\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: \"/signin\",\n\t\t\t\t\t\tstate: { from: props.location },\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t/>\n);\n\nexport default AdminRoute;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\AddProduct.js",["236","237","238","239","240","241"],"import React, {useState, useEffect} from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\nimport {createProduct, getCategories, getCollections} from './apiAdmin';\n\nconst AddProduct = () => {\n    const {user, token} = isAuthenticated();\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        collections: [],\n        category: '',\n        _collection: '',\n        shipping: '',\n        quantitySmall: '',\n        quantityMed: '',\n        quantityLarge: '',\n        quantityFree: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        sizeSmall: false,\n        sizeMed: false,\n        sizeLarge: false,\n        sizeFree: false,\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const {\n        name,\n        description,\n        price,\n        categories,\n        collections,\n        category,\n        _collection,\n        shipping,\n        quantitySmall,\n        quantityMed,\n        quantityLarge,\n        quantityFree,\n        loading,\n        error,\n        createdProduct,\n        sizeSmall,\n        sizeMed,\n        sizeLarge,\n        sizeFree,\n        redirectToProfile,\n        formData\n    } = values;\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({...values, error:data.error});\n            }\n            else {\n                getCollections().then(data2 => {\n                    if (data2.error) {\n                        setValues({...values, error:data.error});\n                    }\n                    else {\n                        setValues({...values, categories: data, collections: data2, formData: new FormData()});\n                    }\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    },[]);\n\n    const handleChange = (name) => event => {\n        const value = name === 'photo' ? \n            event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({...values, [name]: value});\n    };\n\n    const clickSubmit = (event) => {\n        event.preventDefault();\n        setValues({...values, error: '', loading: true});\n        createProduct(user._id, token, formData)\n            .then(data => {\n                if(data.error) {\n                    setValues({...values, error: true, loading: false});\n                }\n                else {\n                    setValues({\n                        ...values,\n                        name: '',\n                        description: '',\n                        photo: '',\n                        price: '',\n                        quantitySmall: '',\n                        quantityMed: '',\n                        quantityLarge: '',\n                        quantityFree: '',\n                        sizeSmall: false,\n                        sizeMed: false,\n                        sizeLarge: false,\n                        sizeFree: false,\n                        error: false,\n                        loading: false,\n                        createdProduct: data.name\n                    });\n                }\n            });\n    };\n\n    const newPostForm = () => (\n        <form className = \"mb-3\" onSubmit={clickSubmit}>\n            <h4>Import Photo</h4>\n            <div className = \"form-group\">\n                <label className = \"btn btn-secondary\">\n                <input onChange = {handleChange('photo')} type = \"file\" name = \"photo\" accept = \"image/*\"/>\n                </label>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Name\n                </label>\n                <input onChange = {handleChange('name')} type = \"text\" className = \"form-control\" value = {name}/>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Description\n                </label>\n                <textarea onChange = {handleChange('description')} className = \"form-control\" value = {description}/>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Price\n                </label>\n                <input onChange = {handleChange('price')} type = \"number\" className = \"form-control\" value = {price}/>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Category\n                </label>\n                <select onChange = {handleChange('category')}  className = \"form-control\">\n                    <option disabled selected hidden>Please select...</option>\n                    {categories && categories.map((c, i) => (\n                        <option key = {i }value = {c._id}>{c.name}</option>\n                    ))}\n                </select>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Collection\n                </label>\n                <select onChange = {handleChange('_collection')}  className = \"form-control\">\n                    <option disabled selected hidden>Please select...</option>\n                    {collections && collections.map((c, i) => (\n                        <option key = {i }value = {c._id}>{c.name}</option>\n                    ))}\n                </select>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Shipping\n                </label>\n                <select onChange = {handleChange('shipping')}  className = \"form-control\">\n                    <option disabled selected hidden>Please select...</option>\n                    <option value = \"1\">Available</option>\n                    <option value = \"0\">Not Available</option>\n                </select>\n            </div>\n\n            <div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Sizes\n                </label>\n                <div className = \"form-check\">\n                    <input onChange = {handleSize('sizeSmall')} id = \"Small\" type = \"checkbox\" className = \"form-check-input\" value = {sizeSmall}/>\n                    <label className = \"form-check-label\" for=\"Small\">Small</label>\n                </div>\n\n                <div className = \"form-group\" style = {{display: sizeSmall ? '' : 'none'}}>\n                    <label className = \"text-muted\">\n                        Quantity (Small)\n                    </label>\n                    <input onChange = {handleChange('quantitySmall')} type = \"number\" className = \"form-control\" value = {quantitySmall}/>\n                </div>\n\n                <div className = \"form-check\">\n                    <input onChange = {handleSize('sizeMed')} id = \"Med\" type = \"checkbox\" className = \"form-check-input\" value = {sizeMed}/>\n                    <label className = \"form-check-label\" for=\"Med\">Medium</label>\n                </div>\n\n                <div className = \"form-group\" style = {{display: sizeMed ? '' : 'none'}}>\n                    <label className = \"text-muted\">\n                        Quantity (Medium)\n                    </label>\n                    <input onChange = {handleChange('quantityMed')} type = \"number\" className = \"form-control\" value = {quantityMed}/>\n                </div>\n\n                <div className = \"form-check\">\n                    <input onChange = {handleSize('sizeLarge')} id = \"Large\" type = \"checkbox\" className = \"form-check-input\" value = {sizeLarge}/>\n                    <label className = \"form-check-label\" for=\"Med\">Large</label>\n                </div>\n\n                <div className = \"form-group\" style = {{display: sizeLarge ? '' : 'none'}}>\n                    <label className = \"text-muted\">\n                        Quantity (Large)\n                    </label>\n                    <input onChange = {handleChange('quantityLarge')} type = \"number\" className = \"form-control\" value = {quantityLarge}/>\n                </div>\n\n                <div className = \"form-check\">\n                    <input onChange = {handleSize('sizeFree')} id = \"Free\" type = \"checkbox\" className = \"form-check-input\" value = {sizeFree}/>\n                    <label className = \"form-check-label\" for=\"Free\">Free Size</label>\n                </div>\n\n                <div className = \"form-group\" style = {{display: sizeFree ? '' : 'none'}}>\n                    <label className = \"text-muted\">\n                        Quantity (Free Size)\n                    </label>\n                    <input onChange = {handleChange('quantityFree')} type = \"number\" className = \"form-control\" value = {quantityFree}/>\n                </div>\n            </div>\n\n            <button className = \"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const handleSize = (name) => event => {\n        const value = event.target.checked;\n        event.target.value = event.target.checked;\n        formData.set(name, value);\n        setValues({...values, [name]: value});\n    };\n\n    const showError = () => (\n        <div className = \"alert alert-danger\" style = {{display: error ? '' : 'none'}}>\n            <h5>\n                Insufficient Details! Please review your input and try again.\n            </h5>\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className = \"alert alert-success\" style = {{display: createdProduct ? '' : 'none'}}>\n            <h5>{createdProduct} is successfully created!</h5>\n        </div>\n    );\n\n    const showLoading = () => (\n        loading && (<div className = \"alert alert-info\">\n            <h5>Loading...</h5>\n        </div>)\n    );\n\n    return (\n        <Layout title = \"Create a new Product\" description = {`Ready to add a new product, ${user.name}!`}>\n            \n        <div className = \"row\">\n            <div className = \"col-md-8 offset-md-2\">\n                {showLoading()}\n                {showSuccess()}\n                {showError()}\n                {newPostForm()}\n                {JSON.stringify(values)}\n            </div>\n        </div>\n            \n        </Layout>        \n    );\n};\n\nexport default AddProduct;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\AddCategory.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\Orders.js",["242","243"],"import React, {useState, useEffect} from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\nimport {listOrders, getStatusValues, updateOrderStatus} from './apiAdmin';\nimport moment from 'moment';\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([]);\n    const [statusValues, setstatusValues] = useState([]);\n\n    const {user, token} = isAuthenticated();\n\n    const loadOrders = () => {\n        listOrders(user._id, token)\n            .then(data => {\n                if (data.error) {\n                    console.log(data.error);\n                }\n                else {\n                    setOrders(data);\n                }\n            });\n    };\n\n    const loadStatusValues = () => {\n        getStatusValues(user._id, token)\n            .then(data => {\n                if (data.error) {\n                    console.log(data.error);\n                }\n                else {\n                    setstatusValues(data);\n                }\n            });\n    };\n\n    useEffect(() => {\n        loadOrders();\n        loadStatusValues();\n    },[]);\n\n    const showOrdersLength = () => {\n        if (orders.length > 0) {\n            return (\n                <h1 className = \"text-danger display-2\">\n                    Total orders: {orders.length}\n                </h1>\n            );\n        } \n        else {\n            return (\n                <h1 className = \"text-danger display-2\">\n                    No Orders\n                </h1>\n            );\n        }\n    };\n\n    const showInput = (key, value) => (\n        <div className = \"input-group mb-2 mr-sm-2\">\n            <div className = \"input-group-prepend\">\n                <div className = \"input-group-text\">\n                    {key}\n                </div>\n                <input type = \"text\" value = {value} className = \"form-control\" readOnly/>\n            </div>\n        </div>\n    );\n\n    const handleStatusChange = (e, orderId) => {\n        updateOrderStatus(user._id, token, orderId, e.target.value)\n            .then(data => {\n                if (data.error) {\n                    console.log('Status update failed');\n                }\n                else {\n                    loadOrders();\n                }\n            })\n    };\n\n    const showStatus = (o) => (\n        <div className = \"form-group\">\n            <h3 className = \"mark mb-4\">\n                Status: {o.status}\n            </h3>\n                <select className = \"form-control\" \n                onChange = {(e) => handleStatusChange(e, o._id)}>\n                    <option hidden disabled selected>Update Status</option>\n                    {statusValues.map((status, index) => (\n                        <option key = {index} value = {status}>\n                            {status}\n                        </option>\n                    ))}\n                </select>\n        </div>\n    );\n\n    return (\n        <Layout title = \"Customer Orders\" description = {`${user.name}, time to manage your orders!`}>\n            \n        <div className = \"row\">\n            <div className = \"col-md-8 offset-md-2\">\n                {showOrdersLength()}\n                {orders.map((o, oIndex) => {\n                    return (\n                        <div className = \"mt-5\" key = {oIndex} style ={{borderBottom: '5px solid indigo'}}>\n                            <h5 className = \"mb-5\">\n                                <span className = \"bg-primary\">\n                                    Order ID: {o._id}\n                                </span>\n                            </h5>\n                            <ul className = \"list-group mb-2\">\n                                <li className = \"list-group-item\">\n                                    {showStatus(o)}\n                                </li>\n                                <li className = \"list-group-item\">\n                                    Amount: &#8369;{o.amount}\n                                </li>\n                                <li className = \"list-group-item\">\n                                    Ordered by: {o.user.name}\n                                </li>\n                                <li className = \"list-group-item\">\n                                    Order Date: {moment(o.createdAt).fromNow()}\n                                </li>\n                                <li className = \"list-group-item\">\n                                    Delivery Address: {o.address}\n                                </li>\n                            </ul>\n                            <h3 className = \"mt-4 mb-4 font-italic\">\n                                Total Products Ordered: {o.products.length}\n                            </h3>\n\n                            {o.products.map((p, pIndex) => (\n                                    <div className = \"mb-4\" key = {pIndex} style={{padding: '20px', border: '1px solid indigo'}}>\n                                        {showInput('Name', p.name)}\n                                        {showInput('Price', p.price)}\n                                        {showInput('Count', p.count)}\n                                        {showInput('Product ID', p._id)}\n                                    </div>\n                            ))}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n            \n        </Layout>        \n    );\n\n};\n\nexport default Orders;","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\UpdateProduct.js",["244","245","246","247","248"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { getProduct, getCategories, updateProduct, getCollections } from \"./apiAdmin\";\n\nconst UpdateProduct = ({ match }) => {\n\tconst [values, setValues] = useState({\n\t\tname: \"\",\n\t\tdescription: \"\",\n\t\tprice: \"\",\n\t\tcategories: [],\n\t\tcollections: [],\n\t\tcategory: \"\",\n\t\t_collection: \"\",\n\t\tshipping: \"\",\n\t\tquantitySmall: '',\n        quantityMed: '',\n        quantityLarge: '',\n        quantityFree: '',\n\t\tphoto: \"\",\n\t\tloading: false,\n\t\terror: false,\n\t\tcreatedProduct: \"\",\n\t\tsizeSmall: false,\n        sizeMed: false,\n        sizeLarge: false,\n        sizeFree: false,\n\t\tredirectToProfile: false,\n\t\tformData: \"\",\n\t});\n\tconst [categories, setCategories] = useState([]);\n\tconst [collections, setCollections] = useState([]);\n\n\tconst { user, token } = isAuthenticated();\n\tconst {\n\t\tname,\n\t\tdescription,\n\t\tprice,\n\t\t// categories,\n\t\t// collections,\n\t\tcategory,\n\t\t_collection,\n\t\tshipping,\n\t\tquantitySmall,\n\t\tquantityMed,\n\t\tquantityLarge,\n\t\tquantityFree,\n\t\tloading,\n\t\terror,\n\t\tcreatedProduct,\n\t\tsizeSmall,\n        sizeMed,\n        sizeLarge,\n        sizeFree,\n\t\tredirectToProfile,\n\t\tformData,\n\t} = values;\n\n\tconst init = (productId) => {\n\t\tgetProduct(productId).then((data) => {\n\t\t\tif (data.error) {\n\t\t\t\tsetValues({ ...values, error: data.error });\n\t\t\t} else {\n\t\t\t\t// populate the state\n\t\t\t\tsetValues({\n\t\t\t\t\t...values,\n\t\t\t\t\tname: data.name,\n\t\t\t\t\tdescription: data.description,\n\t\t\t\t\tprice: data.price,\n\t\t\t\t\tcategory: data.category._id,\n\t\t\t\t\t_collection: data._collection._id,\n\t\t\t\t\tshipping: data.shipping,\n\t\t\t\t\tquantitySmall: data.quantitySmall,\n\t\t\t\t\tquantityMed: data.quantityMed,\n\t\t\t\t\tquantityLarge: data.quantityLarge,\n\t\t\t\t\tquantityFree: data.quantityFree,\n\t\t\t\t\tsizeSmall: data.sizeSmall,\n        \t\t\tsizeMed: data.sizeMed,\n        \t\t\tsizeLarge: data.sizeLarge,\n        \t\t\tsizeFree: data.sizeFree,\n\t\t\t\t\tformData: new FormData(),\n\t\t\t\t});\n\t\t\t\t// load categories\n\t\t\t\tinitCategories();\n\t\t\t}\n\t\t});\n\t};\n\n\t// load categories and set form data\n\tconst initCategories = () => {\n\t\tgetCategories().then(data => {\n            if (data.error) {\n                setValues({...values, error:data.error});\n            }\n            else {\n                getCollections().then(data2 => {\n                    if (data2.error) {\n                        setValues({...values, error:data.error});\n                    }\n                    else {\n                        setCategories(data);\n\t\t\t\t\t\tsetCollections(data2);\n                    }\n                });\n            }\n        });\n\t};\n\n\tuseEffect(() => {\n\t\tinit(match.params.productId);\n\t}, []);\n\n\tconst handleChange = (name) => (event) => {\n\t\tconst value =\n\t\t\tname === \"photo\" ? event.target.files[0] : event.target.value;\n\t\tformData.set(name, value);\n\t\tsetValues({ ...values, [name]: value });\n\t};\n\n\tconst clickSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetValues({ ...values, error: \"\", loading: true });\n\n\t\tupdateProduct(match.params.productId, user._id, token, formData).then(\n\t\t\t(data) => {\n\t\t\t\tif (data.error) {\n\t\t\t\t\tsetValues({ ...values, error: data.error });\n\t\t\t\t} else {\n\t\t\t\t\tsetValues({\n\t\t\t\t\t\t...values,\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\tdescription: \"\",\n\t\t\t\t\t\tphoto: \"\",\n\t\t\t\t\t\tprice: \"\",\n\t\t\t\t\t\tquantitySmall: '',\n                        quantityMed: '',\n                        quantityLarge: '',\n                        quantityFree: '',\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\terror: false,\n\t\t\t\t\t\tredirectToProfile: true,\n\t\t\t\t\t\tcreatedProduct: data.name,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\tconst newPostForm = () => (\n\t\t<form className=\"mb-3\" onSubmit={clickSubmit}>\n\t\t\t<h4>Post Photo</h4>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"btn btn-secondary\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={handleChange(\"photo\")}\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tname=\"photo\"\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"text-muted\">Name</label>\n\t\t\t\t<input\n\t\t\t\t\tonChange={handleChange(\"name\")}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"text-muted\">Description</label>\n\t\t\t\t<textarea\n\t\t\t\t\tonChange={handleChange(\"description\")}\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={description}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"text-muted\">Price</label>\n\t\t\t\t<input\n\t\t\t\t\tonChange={handleChange(\"price\")}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={price}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"text-muted\">Category</label>\n\t\t\t\t<select\n\t\t\t\t\tonChange={handleChange(\"category\")}\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t>\n\t\t\t\t\t<option>Please select</option>\n\t\t\t\t\t{categories &&\n\t\t\t\t\t\tcategories.map((c, i) => (\n\t\t\t\t\t\t\t<option key={i} value={c._id}>\n\t\t\t\t\t\t\t\t{c.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\n\t\t\t<div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Collection\n                </label>\n                <select onChange = {handleChange('_collection')}  className = \"form-control\">\n                    <option disabled selected hidden>Please select...</option>\n                    {collections && collections.map((c, i) => (\n                        <option key = {i }value = {c._id}>{c.name}</option>\n                    ))}\n                </select>\n            </div>\n\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"text-muted\">Shipping</label>\n\t\t\t\t<select\n\t\t\t\t\tonChange={handleChange(\"shipping\")}\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t>\n\t\t\t\t\t<option disabled selected hidden>Please select...</option>\n\t\t\t\t\t<option value=\"0\">No</option>\n\t\t\t\t\t<option value=\"1\">Yes</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\n\t\t\t<div className = \"form-group\">\n                <label className = \"text-muted\">\n                    Sizes\n                </label>\n                <div className = \"form-check\">\n                    <input onChange = {handleSize('sizeSmall')} id = \"Small\" type = \"checkbox\" className = \"form-check-input\" value = {sizeSmall}/>\n                    <label className = \"form-check-label\" for=\"Small\">Small</label>\n                </div>\n\n                <div className = \"form-group\" style = {{display: sizeSmall ? '' : 'none'}}>\n                    <label className = \"text-muted\">\n                        Quantity (Small)\n                    </label>\n                    <input onChange = {handleChange('quantitySmall')} type = \"number\" className = \"form-control\" value = {quantitySmall}/>\n                </div>\n\n                <div className = \"form-check\">\n                    <input onChange = {handleSize('sizeMed')} id = \"Med\" type = \"checkbox\" className = \"form-check-input\" value = {sizeMed}/>\n                    <label className = \"form-check-label\" for=\"Med\">Medium</label>\n                </div>\n\n                <div className = \"form-group\" style = {{display: sizeMed ? '' : 'none'}}>\n                    <label className = \"text-muted\">\n                        Quantity (Medium)\n                    </label>\n                    <input onChange = {handleChange('quantityMed')} type = \"number\" className = \"form-control\" value = {quantityMed}/>\n                </div>\n\n                <div className = \"form-check\">\n                    <input onChange = {handleSize('sizeLarge')} id = \"Large\" type = \"checkbox\" className = \"form-check-input\" value = {sizeLarge}/>\n                    <label className = \"form-check-label\" for=\"Med\">Large</label>\n                </div>\n\n                <div className = \"form-group\" style = {{display: sizeLarge ? '' : 'none'}}>\n                    <label className = \"text-muted\">\n                        Quantity (Large)\n                    </label>\n                    <input onChange = {handleChange('quantityLarge')} type = \"number\" className = \"form-control\" value = {quantityLarge}/>\n                </div>\n\n                <div className = \"form-check\">\n                    <input onChange = {handleSize('sizeFree')} id = \"Free\" type = \"checkbox\" className = \"form-check-input\" value = {sizeFree}/>\n                    <label className = \"form-check-label\" for=\"Free\">Free Size</label>\n                </div>\n\n                <div className = \"form-group\" style = {{display: sizeFree ? '' : 'none'}}>\n                    <label className = \"text-muted\">\n                        Quantity (Free Size)\n                    </label>\n                    <input onChange = {handleChange('quantityFree')} type = \"number\" className = \"form-control\" value = {quantityFree}/>\n                </div>\n            </div>\n\n\t\t\t<button className=\"btn btn-outline-primary\">Update Product</button>\n\t\t</form>\n\t);\n\n\tconst handleSize = (name) => event => {\n        const value = event.target.checked;\n        event.target.value = event.target.checked;\n        formData.set(name, value);\n        setValues({...values, [name]: value});\n    };\n\n\tconst showError = () => (\n\t\t<div\n\t\t\tclassName=\"alert alert-danger\"\n\t\t\tstyle={{ display: error ? \"\" : \"none\" }}\n\t\t>\n\t\t\t{error}\n\t\t</div>\n\t);\n\n\tconst showSuccess = () => (\n\t\t<div\n\t\t\tclassName=\"alert alert-info\"\n\t\t\tstyle={{ display: createdProduct ? \"\" : \"none\" }}\n\t\t>\n\t\t\t<h2>{`${createdProduct}`} is updated!</h2>\n\t\t</div>\n\t);\n\n\tconst showLoading = () =>\n\t\tloading && (\n\t\t\t<div className=\"alert alert-success\">\n\t\t\t\t<h2>Loading...</h2>\n\t\t\t</div>\n\t\t);\n\n\tconst redirectUser = () => {\n\t\tif (redirectToProfile) {\n\t\t\tif (!error) {\n\t\t\t\treturn <Redirect to=\"/admin/products\" />;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Update Product\"\n\t\t\tdescription={`${user.name}, update this product!`}\n\t\t>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-8 offset-md-2\">\n\t\t\t\t\t{showLoading()}\n\t\t\t\t\t{showSuccess()}\n\t\t\t\t\t{showError()}\n\t\t\t\t\t{newPostForm()}\n\t\t\t\t\t{redirectUser()}\n\t\t\t\t\t{JSON.stringify(values)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default UpdateProduct;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\ManageProducts.js",["249"],"import React, {useState, useEffect} from 'react';\nimport Layout from '../core/Layout';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\nimport {getProducts, deleteProduct} from './apiAdmin';\n\nconst ManageProducts = () => {\n    const [products, setProducts] = useState([]);\n    const {user, token} = isAuthenticated();\n\n    const loadProducts = () => {\n        getProducts()\n            .then(data => {\n                if (data.error) {\n                    console.log(data.error);\n                }\n                else {\n                    setProducts(data);\n                    console.log(\"Products loaded\");  \n                }\n            });\n        };\n\n    const destroy = productId => {\n        deleteProduct(productId, user._id, token)\n            .then(data => {\n                if (data.error) {\n                    console.log(data.error);\n                }\n                else {\n                    loadProducts();   \n                }\n            })\n    };\n    \n    useEffect(() => {\n        loadProducts();\n    },[]);\n\n    const showProducts = () => {\n        return (\n            <div>\n                <table className = \"table table-striped\">\n            <thead className = \"thead-dark\">\n                <tr>\n                <th scope=\"col\">Products (Total: {products.length})</th>\n                <th scope=\"col\">Update</th>\n                <th scope=\"col\">Delete</th>\n                <th scope=\"col\">Category</th>\n                <th scope=\"col\">Collection</th>\n                <th scope=\"col\">Small</th>\n                <th scope=\"col\">Medium</th>\n                <th scope=\"col\">Large</th>\n                <th scope=\"col\">Free Size</th>\n                <th scope=\"col\">Shipping</th>\n                <th scope=\"col\">Sold (Small)</th>\n                <th scope=\"col\">Sold (Medium)</th>\n                <th scope=\"col\">Sold (Large)</th>\n                <th scope=\"col\">Sold (Free Size)</th>\n                </tr>\n            </thead>\n            <tbody>\n                {products.map((product, i) => (\n                    <tr key = {i}>\n                        <td>\n                            {product.name}\n                        </td>\n                        <td>\n                            <Link to = {`/admin/product/update/${product._id}`}>\n                                    <button \n                                    style={{\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"#52c41a\",\n\t\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\t}}\n                                    className = \"badge badge-warning badge-pill\">\n                                        Update\n                                    </button>\n                                </Link>\n                        </td>\n                        <td>\n                            <button onClick = {() => destroy(product._id)} className = \"badge badge-danger badge-pill\">\n                                        Delete\n                            </button>\n                        </td>\n                        <td>\n                            {product.category.name}\n                        </td>\n                        <td>\n                            {product._collection ? product._collection.name : \"-\"}\n                        </td>\n                        <td>\n                            {product.sizeSmall ? product.quantitySmall : '-'}\n                        </td>\n                        <td>\n                            {product.sizeMed ? product.quantityMed : '-'}\n                        </td>\n                        <td>\n                            {product.sizeLarge ? product.quantityLarge : '-'}\n                        </td>\n                        <td>\n                            {product.sizeFree ? product.quantityFree : '-'}\n                        </td>\n                        <td>\n                            {product.shipping ? \"Available\" : \"Not Available\"}\n                        </td>\n                        <td>\n                            {product.sizeSmall ? product.soldSmall : '-'}\n                        </td>\n                        <td>\n                            {product.sizeMed ? product.soldMed : '-'}\n                        </td>\n                        <td>\n                            {product.sizeLarge ? product.soldLarge : '-'}\n                        </td>\n                        <td>\n                            {product.sizeFree ? product.soldFree : '-'}\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n            </table>\n            </div>\n        );\n    };\n\n    return (\n        <Layout title = \"Manage Products\" \n        description = \"Modify or Remove Products Here\"\n        className = \"container-fluid\">\n\n            <div className = \"row\">\n                <div className = \"col-12\">\n                <h2 className = \"text-center\"></h2>  \n                {showProducts()}\n                    <hr/>\n                \n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default ManageProducts;\n\n\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\AdminFAQ.js",["250"],"import Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport React, { useState } from \"react\";\nimport FaqTable from \"../core/FaqTable\";\n\nconst AdminFAQ = () => {\n\tconst {\n\t\tuser: { name },\n\t} = isAuthenticated();\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"FAQs\"\n\t\t\tdescription={` ${name}, Please Edit the FAQS here`}\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<FaqTable />\n\t\t</Layout>\n\t);\n};\nexport default AdminFAQ;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\adminFeedback.js",["251"],"/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport FeedbackTable from \"../core/FeedbackTable\";\nimport { isAuthenticated } from \"../auth\";\nimport {\n\tgetPendingFeedback,\n\tupdateFeedback,\n\tdeleteFeedback,\n} from \"../admin/apiAdmin\";\n\nconst adminFeedback = () => {\n\tconst [feedback, setFeedback] = useState([]);\n\tconst { token } = isAuthenticated();\n\n\tconst filterFeedback = (filter) => {\n\t\tif (feedback.length > 0) {\n\t\t\tconst filtered = feedback.filter((item) => item.key !== filter);\n\t\t\tsetFeedback(filtered);\n\t\t}\n\t};\n\n\tconst handleUpdate = (feedbackId) => {\n\t\tconsole.log(feedbackId, \"update\");\n\t\tupdateFeedback(feedbackId, token);\n\t\tfilterFeedback(feedbackId);\n\t};\n\n\tconst handleDelete = (feedbackId) => {\n\t\tconsole.log(feedbackId, \"delete\");\n\t\tdeleteFeedback(feedbackId, token);\n\t\tfilterFeedback(feedbackId);\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetchFeedback = async () => {\n\t\t\tconst { result } = await getPendingFeedback(token);\n\t\t\tconsole.log(result);\n\n\t\t\tconst responseFeedback = result.map((item) => ({\n\t\t\t\tkey: item._id,\n\t\t\t\tname: item.user.name,\n\t\t\t\tcontent: item.content,\n\t\t\t\tstatus: item.status ? \"Published\" : \"Pending\",\n\t\t\t}\n\t\t\t));\n\n\t\t\tsetFeedback(responseFeedback);\n\t\t};\n\n\t\tfetchFeedback();\n\n\t\treturn () => {\n\t\t\tsetFeedback(null);\n\t\t};\n\t}, []);\n\n\tconst {\n\t\tuser: { name },\n\t} = isAuthenticated();\n\n\treturn (\n\t\t<Layout\n\t\t\ttitle=\"Feedbacks\"\n\t\t\tdescription={` ${name}, Please review the feedbacks here`}\n\t\t\tclassName=\"container-fluid\"\n\t\t>\n\t\t\t<FeedbackTable\n\t\t\t\tdata={feedback}\n\t\t\t\tonUpdate={handleUpdate}\n\t\t\t\tonDelete={handleDelete}\n\t\t\t/>\n\t\t</Layout>\n\t);\n};\n\nexport default adminFeedback;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\UpdateAboutUs.js",["252","253","254","255","256","257"],"/* eslint-disable no-restricted-globals */\nimport React, {useState, useEffect} from 'react';\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { updateAboutUs, removeAboutUs } from \"./apiAdmin\";\nimport { getDesc } from \"../core/apiCore\"\n\n// changing about us description\nconst UpdateAboutUs = ({ match }) => {\n\tconst [values, setValues] = useState({\n\t\tdescription: \"\",\n\t\tloading: false,\n\t\terror: false,\n\t});\n\n\tconst history = useHistory(); \n\t\n\tconst { user, token } = isAuthenticated();\n\n\tconst {\n\t\tdescription,\n\t\tloading,\n\t\terror,\n\t\tformData,\n\t} = values;\n\n\tconst handleChange = () => (event) => {\n\t\tsetValues({ ...values, description: event.target.value });\n\t};\n\n\tconst clickSubmit = (e) => {\n\t\te.preventDefault();\n\t\t\n\t\tif (!(description.length === 0 || !description.trim())) {\n\t\t\tupdateAboutUs(user._id, token, description)\n\t\t\t.then((res) => {\n\t\t\t\t\tsetValues({\n\t\t\t\t\t\t...values,\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\terror: false,\n\t\t\t\t\t});\n\t\t\t\t\thistory.push(\"/\")\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\talert(\"Description cannot be empty\")\n\t\t}\n\t};\n\n\tconst newPostForm = () => (\n\t\t<form className=\"mb-3\" onSubmit={clickSubmit}>\n\t\t\t<h4>Update About Us</h4>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"text-muted\">description</label>\n\t\t\t\t<textarea\n\t\t\t\t\tonChange={handleChange()}\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={description}\n\t\t\t\t\tname=\"description\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<button type=\"submit\" className=\"btn btn-outline-primary mr-5\">\n\t\t\t\tUpdate Description\n\t\t\t</button>\n\t\t</form>\n\t);\n\n\tconst showError = () => (\n\t\t<div\n\t\t\tclassName=\"alert alert-danger\"\n\t\t\tstyle={{ display: error ? \"\" : \"none\" }}\n\t\t>\n\t\t\t{error}\n\t\t</div>\n\t);\n\n\tconst showLoading = () =>\n\t\tloading && (\n\t\t\t<div className=\"alert alert-success\">\n\t\t\t\t<h2>Loading...</h2>\n\t\t\t</div>\n\t\t);\n\nreturn (\n    <Layout\n        title=\"Dashboard\"\n        description={`Edit the About Us description here ${user.name}`}\n        className=\"container-fluid\"\n    >\n        <div className=\"row\">\n\t\t\t\t<div className=\"col-md-8 offset-md-2\">\n\t\t\t\t\t{showLoading()}\n\t\t\t\t\t{showError()}\n\t\t\t\t\t{newPostForm()}\n\t\t\t\t</div>\n\t\t\t</div>\n   \n        \n    </Layout>\n);\n};\n\n\nexport default UpdateAboutUs;","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\AdminUpdateFeedback.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\UpdateBackground.js",["258","259","260"],"/* eslint-disable no-restricted-globals */\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { changeBg, removeBg } from \"./apiAdmin\";\n\nconst UpdateBackground = ({ match }) => {\n\tconst [values, setValues] = useState({\n\t\tphoto: \"\",\n\t\tformData: new FormData(),\n\t\tloading: false,\n\t\terror: false,\n\t});\n\n\tconst history = useHistory();\n\n\tconst { user, token } = isAuthenticated();\n\n\tconst { loading, error, photo, formData } = values;\n\n\tconst handleChange = (name) => (event) => {\n\t\tconst value =\n\t\t\tname === \"photo\" ? event.target.files[0] : event.target.value;\n\t\tformData.set(name, value);\n\t\tsetValues({ ...values, [name]: value });\n\t};\n\n\tconst clickSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (photo === \"\" || photo === undefined) return;\n\n\t\tchangeBg(user._id, token, formData).then((res) => {\n\t\t\tif (res.error) {\n\t\t\t\tsetValues({ ...values, error: res.error });\n\t\t\t} else {\n\t\t\t\thistory.push(\"/\");\n\n\t\t\t\tsetValues({\n\t\t\t\t\t...values,\n\t\t\t\t\tphoto: \"\",\n\t\t\t\t\tloading: false,\n\t\t\t\t\terror: false,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tconst handleRemoveBg = () => {\n\t\tremoveBg(user._id, token).then((res) => {\n\t\t\tif (!res.error) history.push(\"/\");\n\t\t});\n\t};\n\n\tconst newPostForm = () => (\n\t\t<form className=\"mb-3\" onSubmit={clickSubmit}>\n\t\t\t<h4>Update Background Image</h4>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label className=\"btn btn-secondary\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={handleChange(\"photo\")}\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tname=\"photo\"\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<button type=\"submit\" className=\"btn btn-outline-primary mr-5\">\n\t\t\t\tUpdate Background\n\t\t\t</button>\n\n\t\t\t<button\n\t\t\t\tonClick={handleRemoveBg}\n\t\t\t\tclassName=\"btn btn-outline-danger \"\n\t\t\t>\n\t\t\t\tRemove Background\n\t\t\t</button>\n\t\t</form>\n\t);\n\n\tconst showError = () => (\n\t\t<div\n\t\t\tclassName=\"alert alert-danger\"\n\t\t\tstyle={{ display: error ? \"\" : \"none\" }}\n\t\t>\n\t\t\t{error}\n\t\t</div>\n\t);\n\n\t// const showSuccess = () => (\n\t// \t<div\n\t// \t\tclassName=\"alert alert-info\"\n\t// \t\tstyle={{ display: createdProduct ? \"\" : \"none\" }}\n\t// \t>\n\t// \t\t<h2>{`${createdProduct}`} is updated!</h2>\n\t// \t</div>\n\t// );\n\n\tconst showLoading = () =>\n\t\tloading && (\n\t\t\t<div className=\"alert alert-success\">\n\t\t\t\t<h2>Loading...</h2>\n\t\t\t</div>\n\t\t);\n\n\treturn (\n\t\t<Layout title=\"Update Background\" description={`Hello! ${user.name}.`}>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-md-8 offset-md-2\">\n\t\t\t\t\t{showLoading()}\n\t\t\t\t\t{/* {showSuccess()} */}\n\t\t\t\t\t{showError()}\n\t\t\t\t\t{newPostForm()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default UpdateBackground;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Layout.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\user\\apiUser.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\apiCore.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\admin\\apiAdmin.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\cartHelpers.js",["261","262","263","264"],"import { API } from \"../config\";\nimport { read } from \"./apiCore\";\nimport moment from \"moment\";\nexport const addItem = (item, next) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item, \n            count: 1\n        });\n        cart = Array.from(new Set(cart.map((p) => (p._id)))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next(); \n    }\n}; \n\nexport const itemTotal = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart')).length;\n        }\n        return 0;\n    }\n};\n\nexport const getCart = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart'));\n        }\n        return [];\n    }\n};\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window != 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n\n    cart.map((product,i) => {\n        if (product._id === productId) {\n            cart[i].count = count;\n        }\n    });\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n};\n\nexport const updateSize = (productId, size) => {\n    let cart = [];\n    if (typeof window != 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n\n    cart.map((product,i) => {\n        if (product._id === productId) {\n            cart[i].size = size;\n        }\n    });\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n};\n\nexport const removeItem = (productId) => {\n    let cart = [];\n    if (typeof window != 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n\n    cart.map((product,i) => {\n        if (product._id === productId) {\n            cart.splice(i, 1);\n        }\n    });\n\n    localStorage.setItem('cart', JSON.stringify(cart));\n    return cart;\n};\n\nexport const emptyCart = (userId, token, next) => {\n    if (typeof window != 'undefined') {\n        localStorage.removeItem('cart');\n        next();\n\n        return fetch(`${API}/user/${userId}`, {\n            method: \"PUT\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n                cart: []\n                }\n            ),\n        })\n            .then((response) => {\n                return response.json();\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n};\n\nexport const saveCart = (userId, token) => {\n\tlet cart = [];\n    if (typeof window != 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n                return fetch(`${API}/user/${userId}`, {\n                    method: \"PUT\",\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    },\n                    body: JSON.stringify({\n                        cart: cart\n                        }\n                    ),\n                })\n                    .then((response) => {\n                        return response.json();\n                    })\n                    .catch((error) => {\n                        console.log(error);\n                    });\n        }\n\n        \n    }\n};\n\nexport const storeSavedCart = (cart) => {\n    if (typeof window !== 'undefined') {\n        localStorage.setItem('cart', JSON.stringify(cart));   \n    }\n}\n\nexport const syncCarttoCatalog = (next) => {\n    let cart = [];\n    if (typeof window != 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.map((product,i) => {\n            read(product._id)\n                .then(data => {\n                    if (data.error) {\n                        alert(data.error);\n                    }\n                    else {\n                        if (!moment(cart[i].updatedAt).isSame(data.updatedAt)) {\n                            cart[i].name = data.name;\n                            cart[i].description = data.description;\n                            cart[i].price = data.price;\n                            cart[i].quantitySmall = data.quantitySmall;\n                            cart[i].quantityMed = data.quantityMed;\n                            cart[i].quantityLarge = data.quantityLarge;\n                            cart[i].quantityFree = data.quantityFree;\n                            cart[i].shipping = data.shipping;\n                            cart[i].sizeSmall = data.sizeSmall;\n                            cart[i].sizeMed = data.sizeMed;\n                            cart[i].sizeLarge = data.sizeLarge;\n                            cart[i].sizeFree = data.sizeFree;\n                            cart[i].soldSmall = data.soldSmall;\n                            cart[i].soldMed = data.soldMed;\n                            cart[i].soldLarge = data.soldLarge;\n                            cart[i].soldFree = data.soldFree;\n                            cart[i].updatedAt = data.updatedAt;\n                            localStorage.setItem('cart', JSON.stringify(cart));\n                            window.location.reload();\n                        }\n                    }\n                });\n        });\n    }\n}\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\FaqTable.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\FeedbackTable.js",["265"],"import { Table, Space, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { isAuthenticated } from \"../auth\";\n\nconst { Column } = Table;\n\n\nfunction FeedbackTable({ data, onUpdate, onDelete }) {\n\tconst {\n\t\tuser: { _id },\n\t} = isAuthenticated();\n\n\treturn (\n\t\t<Table dataSource={data}>\n\t\t\t<Column title=\"Name\" dataIndex=\"name\" key=\"firstName\" />\n\t\t\t<Column title=\"Content\" dataIndex=\"content\" key=\"content\" />\n\t\t\t<Column title=\"Status\" dataIndex=\"status\" key=\"status\" />\n\t\t\t<Column\n\t\t\t\ttitle=\"Action\"\n\t\t\t\tkey=\"action\"\n\t\t\t\trender={(text, record) => (\n\t\t\t\t\t<Space size=\"middle\">\n\t\t\t\t\t\t{record.status === \"Pending\" ? (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => onUpdate(record.key)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPublish\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"#52c41a\",\n\t\t\t\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={`/admin/adminFeedback/${record.key}`}\n\n\t\t\t\t\t\t\t\t\t// onClick={() => onUpdate(record.key)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"danger\"\n\t\t\t\t\t\t\tonClick={() => onDelete(record.key)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Space>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</Table>\n\t);\n}\n\nexport default FeedbackTable;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Checkout.js",["266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"import React, {useState, useEffect} from 'react';\nimport {isAuthenticated} from '../auth';\nimport {Link} from 'react-router-dom';\nimport {createOrder} from './apiCore';\nimport {emptyCart, updateSize, syncCarttoCatalog} from './cartHelpers';\n\nconst Checkout = ({products,setRun = f => f, run = undefined}) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        error: '',\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const handleAddress = event => {\n        setData({...data, address: event.target.value});\n    }\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + (nextValue.count * nextValue.price);\n        },0);\n    };\n\n    let delivery_address = data.address;\n\n    const submitOrder = (e) => {\n        e.preventDefault();\n            setData({\n                loading: true\n            });\n        \n        let proceed = true\n        products.map((product, i) => {\n            if (\n                product.size == \"Small\" && (product.quantitySmall < product.count) ||\n                product.size == \"Medium\" && (product.quantityMed < product.count) ||\n                product.size == \"Large\" && (product.quantityLarge < product.count) ||\n                product.size == \"Free Size\" && (product.quantitySmall < product.count)\n            )\n                {\n                    proceed = false;\n                    setData({\n                        loading: false,\n                        error: \"Your desired quantity on your \" + product.name + \" doesn't match our stocks! Please try again\"\n                    });\n                }\n        });\n\n        if (proceed) {\n            const amount = getTotal();\n            const createOrderData = {\n                products: products,\n                amount: amount,\n                address: delivery_address,\n            };\n            \n            createOrder(userId, token, createOrderData)\n                .then(data2 => {\n                    if (data2.error) {\n                        setData({...data, error: data2.error});\n                    }\n\n                    else {\n                        setRun(!run);\n                        emptyCart(userId, token, () => {\n                                setData({\n                                    loading: false,\n                                    success: true\n                                });\n                        });\n                        alert(\"Order has been successfully placed! Please check your mail to confirm your order. Make sure to keep in touch with us for the transaction!\");\n                    }               \n                });\n        }\n        \n    };\n\n    const showError = error => (\n        <div className = \"alert alert-danger\" \n        style = {{display: error ? '' : 'none'}}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className = \"alert alert-success\" \n        style = {{display: success ? '' : 'none'}}>\n            Order has been successfully placed! Please check your mail to confirm your order. Make sure to keep in touch with us for the transaction!\n        </div>\n    );\n\n    const showLoading = (loading) => (\n        loading && <h2>Loading</h2>\n    )\n\n    //onBlur = {() => setData({...data, error: ''})}\n\n    const handleSize = (productId) => (event) => {\n\t\tupdateSize(productId, event.target.value)\n        setRun(!run)\n\t};\n\n    const showSummaryBreakdown = () => {\n        return (\n            <div>\n            <form onSubmit = {submitOrder}>\n                <table className = \"table table-striped\">\n            <thead className = \"thead-dark\">\n                <tr>\n                <th scope=\"col\">Product Name</th>\n                <th scope=\"col\">Quantity</th>\n                <th scope=\"col\">Price</th>\n                <th scope=\"col\">Small</th>\n                <th scope=\"col\">Medium</th>\n                <th scope=\"col\">Large</th>\n                <th scope=\"col\">Free Size</th>\n                </tr>\n            </thead>\n            <tbody>\n            {products.map((product, i) => (\n                <tr key = {i}>\n                    <td>\n                        {product.name}\n                    </td>\n                    <td>\n                        <b>{product.count}</b>\n                    </td>\n                    <td>\n                        &#8369;{product.count * product.price}\n                    </td>\n                    <td>\n                        {product.sizeSmall && product.quantitySmall > 0 ? \n                            <input value = \"Small\" onChange = {handleSize(product._id)}  name = {product.name} checked = {product.size == \"Small\" && product.quantitySmall > 0} type = \"radio\" required/>\n                            : \"N/A\"}\n                    </td>\n                    <td>\n                        {product.sizeMed && product.quantityMed > 0 ? \n                            <input value = \"Medium\" onChange = {handleSize(product._id)}  name = {product.name} checked = {product.size == \"Medium\" && product.quantityMed > 0} type = \"radio\" required/>\n                            : \"N/A\"}\n                    </td>\n                    <td>\n                        {product.sizeLarge && product.quantityLarge > 0  ? \n                            <input value = \"Large\" onChange = {handleSize(product._id)}  name = {product.name} checked = {product.size == \"Large\" && product.quantityLarge > 0} type = \"radio\" required/>\n                            : \"N/A\"}\n                    </td>\n                    <td>\n                        {product.sizeFree && product.quantityFree > 0  ? \n                            <input value = \"Free Size\" onChange = {handleSize(product._id)}  name = {product.name} checked = {product.size == \"Free Size\" && product.quantityFree > 0} type = \"radio\" required/>\n                            : \"N/A\"}\n                    </td>\n                </tr>\n            ))}\n            <tr>\n                <td>&nbsp;</td>\n                <td>Total:</td>\n                <td><b>&#8369;{getTotal()}</b></td>\n                <td>&nbsp;</td>\n                <td>&nbsp;</td>\n                <td>&nbsp;</td>\n                <td>&nbsp;</td> \n            </tr>\n            </tbody>\n            </table>\n            <div className = \"form-group mb-3\">\n            <label className = \"text-muted\">Delivery Address <b>(required)</b>:</label>\n                <textarea onChange = {handleAddress}\n                    className = \"form-control\"\n                    value = {data.address}\n                    placeholder = \"Enter your delivery address here...\"\n                    required\n                />\n                </div>\n                <button type = \"submit\" className = \"btn btn-success btn-block\" >Submit Order</button>\n            </form>\n            </div>\n        )\n      \n    };\n\n    return (\n        <div>\n            {products.length > 0 ? showSummaryBreakdown() : null}\n            {showLoading(data.loading)}\n            {showError(data.error)}\n            {showSuccess(data.success)}\n            {JSON.stringify(products)}\n        </div>\n    )\n};\n\nexport default Checkout;","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\auth\\index.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Card.js",["286"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ShowImage from \"./ShowImage\";\nimport moment from \"moment\";\nimport { addItem, updateItem, removeItem} from \"./cartHelpers\";\nimport { isAuthenticated } from \"../auth\";\n\nconst Card = ({\n\tproduct,\n\tshowViewProductButton = true,\n\tshowAddToCartButton = true,\n\tcartUpdate = false,\n\tshowRemoveProductButton = false,\n\tsetRun = (f) => f,\n\trun = undefined,\n}) => {\n\tconst [redirect, setRedirect] = useState(false);\n\tconst [count, setCount] = useState(product.count);\n\n\tconst showViewButton = (showViewProductButton) => {\n\t\treturn (\n\t\t\tshowViewProductButton && (\n\t\t\t\t<Link to={`/product/${product._id}`} className=\"mr-2\">\n\t\t\t\t\t<button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">\n\t\t\t\t\t\tView Product\n\t\t\t\t\t</button>\n\t\t\t\t</Link>\n\t\t\t)\n\t\t);\n\t};\n\n\tconst shouldRedirect = (redirect) => {\n\t\tif (redirect) {\n\t\t\tif (isAuthenticated()) {\n\t\t\t\treturn <Redirect to=\"/cart\" />;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn <Redirect to=\"/signin\" />;\n\t\t\t}\n\t\t}\n\t};\n\n\tconst AddToCart = () => {\n\t\tif (isAuthenticated()) {\n\t\t\taddItem(product, () => {\n\t\t\t\tsetRedirect(true);\n\t\t\t});\n\t\t}\n\t\tsetRedirect(true);\n\t};\n\n\tconst isOutofStock = (qSmall, qMed, qLarge, qFree) => {\n\t\treturn qSmall > 0 || qMed > 0 || qLarge > 0 || qFree > 0;\n\t};\n\n\tconst showAddToCart = (showAddToCartButton) => {\n\t\treturn (\n\t\t\tshowAddToCartButton &&\n\t\t\tisOutofStock(product.quantitySmall,product.quantityMed,product.quantityLarge,product.quantityFree) && (\n\t\t\t\t<button\n\t\t\t\t\tonClick={AddToCart}\n\t\t\t\t\tclassName=\"btn btn-outline-warning mt-2 mb-2 card-btn-1\"\n\t\t\t\t>\n\t\t\t\t\tAdd to cart\n\t\t\t\t</button>\n\t\t\t)\n\t\t);\n\t};\n\n\tconst showRemoveButton = (showRemoveProductButton) => {\n\t\treturn (\n\t\t\tshowRemoveProductButton && (\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tremoveItem(product._id);\n\t\t\t\t\t\tsetRun(!run);\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"btn btn-outline-danger mt-2 mb-2 card-btn-1  \"\n\t\t\t\t>\n\t\t\t\t\tRemove from Cart\n\t\t\t\t</button>\n\t\t\t)\n\t\t);\n\t};\n\n\tconst showStock = (qSmall, qMed, qLarge, qFree) => {\n\t\treturn qSmall > 0 || qMed  > 0 || qLarge > 0 || qFree > 0 ? (\n\t\t\t<span className=\"badge badge-primary badge-pill\">In Stock </span>\n\t\t) : (\n\t\t\t<span className=\"badge badge-danger badge-pill\">Out of Stock </span>\n\t\t);\n\t};\n\n\tconst handleChange = (productId) => (event) => {\n\t\tsetRun(!run);\n\t\tif (event.target.value > 5) event.target.value = 5\n\t\tsetCount(event.target.value < 1 ? 1 : event.target.value);\n\t\tif (event.target.value >= 1) {\n\t\t\tupdateItem(productId, event.target.value);\n\t\t}\n\t};\n\n\n\tconst showCartUpdateOptions = (cartUpdate) => {\n\t\treturn (\n\t\t\tcartUpdate && (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"input-group mb-3\">\n\t\t\t\t\t\t<div className=\"input-group-prepend\">\n\t\t\t\t\t\t\t<span className=\"input-group-text\">\n\t\t\t\t\t\t\t\tAdjust Quantity\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={count}\n\t\t\t\t\t\t\tonChange={handleChange(product._id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<div className=\"card-header card-header-1 \">{product.name}</div>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t{shouldRedirect(redirect)}\n\t\t\t\t<ShowImage item={product} url=\"product\" />\n\t\t\t\t<p className=\"card-p  mt-2\">\n\t\t\t\t\t{product.description.substring(0, 100)}{\" \"}\n\t\t\t\t</p>\n\t\t\t\t<p className=\"card-p black-10\">&#8369; {product.price}</p>\n\t\t\t\t<p className=\"black-9\">\n\t\t\t\t\tCategory: {product.category && product.category.name}\n\t\t\t\t</p>\n\t\t\t\t<p className=\"black-8\" style = {{display: product._collection && product._collection.name == \"None\" ? 'none' : ''}}>\n\t\t\t\t\tCollection: {product._collection && product._collection.name}\n\t\t\t\t</p>\n\t\t\t\t<p className=\"black-7\">\n\t\t\t\t\tAdded on {moment(product.createdAt).fromNow()}\n\t\t\t\t</p>\n\t\t\t\t{showStock(product.quantitySmall,product.quantityMed,product.quantityLarge,product.quantityFree)}\n\t\t\t\t<br />\n\t\t\t\t{showViewButton(showViewProductButton)}\n\t\t\t\t{showAddToCart(showAddToCartButton)}\n\t\t\t\t{showRemoveButton(showRemoveProductButton)}\n\t\t\t\t{showCartUpdateOptions(cartUpdate)}\n\t\t\t\t\n\t\t\t\t<br />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Search.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Checkbox.js",["287"],"import React, {useState, useEffect} from 'react';\n\nconst Checkbox = ({categories, handleFilters}) => {\n    const [checked, setChecked] = useState([]);\n\n    const handleToggle = c => () => {\n        const currentCategoryId = checked.indexOf(c);\n        const newCheckedCategoryId = [...checked]\n        if (currentCategoryId === -1) {\n            newCheckedCategoryId.push(c);\n        }\n        else {\n            newCheckedCategoryId.splice(currentCategoryId, 1);\n        }\n        console.log(newCheckedCategoryId);\n        setChecked(newCheckedCategoryId);\n        handleFilters(newCheckedCategoryId);\n    };\n\n    return categories.map((c,i) => (\n        <li key = {i} className = \"list-unstyled\">\n            <input onChange = {handleToggle(c._id)} value = {checked.indexOf(c._id === -1)} type = \"checkbox\" className = \"form-check-input\"/>\n            <label className = \"form-check-label\">{c.name}</label>\n        </li>\n    ));\n};\n\nexport default Checkbox;","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\RadioBox.js",["288","289","290"],"import React, {useState, useEffect, Fragment} from 'react';\n\nconst RadioBox = ({prices, handleFilters}) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = (event) => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return prices.map((p,i) => (\n        <div key = {i}>\n            <input name = {p} onChange = {handleChange} value = {`${p._id}`} type = \"radio\" className = \"mr-2 ml-4\"/>\n            <label className = \"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\fixedPrices.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\config.js",[],"C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\Menu.js",["291"],"import React, { Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { isAuthenticated, signout } from \"../auth\";\nimport { itemTotal } from \"./cartHelpers\";\nimport { ToolFilled } from \"@ant-design/icons\";\n\nconst isActive = (history, path) => {\n\tif (history.location.pathname === path) {\n\t\treturn {\n\t\t\tcolor: \"#ffffff\",\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tcolor: \"#000000\",\n\t\t};\n\t}\n};\n\nconst Menu = ({ history }) => (\n\t<div>\n\t\t<ul className=\"nav nav-tabs bg-primary\">\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link\n\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\tstyle={isActive(history, \"/\")}\n\t\t\t\t\tto=\"/\"\n\t\t\t\t>\n\t\t\t\t\tHome\n\t\t\t\t</Link>\n\t\t\t</li>\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link\n\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\tstyle={isActive(history, \"/shop\")}\n\t\t\t\t\tto=\"/shop\"\n\t\t\t\t>\n\t\t\t\t\tShop\n\t\t\t\t</Link>\n\t\t\t</li>\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link\n\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\tstyle={isActive(history, \"/cart\")}\n\t\t\t\t\tto=\"/cart\"\n\t\t\t\t>\n\t\t\t\t\tCart{\" \"}\n\t\t\t\t\t{itemTotal() == 0 ? (\n\t\t\t\t\t\t``\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<sup>\n\t\t\t\t\t\t\t<small className=\"cart-badge\">{itemTotal()}</small>\n\t\t\t\t\t\t</sup>\n\t\t\t\t\t)}{\" \"}\n\t\t\t\t</Link>\n\t\t\t</li>\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link\n\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\tstyle={isActive(history, \"/user/userFAQ\")}\n\t\t\t\t\tto=\"/user/userFAQ\"\n\t\t\t\t>\n\t\t\t\t\tFAQs\n\t\t\t\t</Link>\n\t\t\t</li>\n\n\t\t\t<li className=\"nav-item\">\n\t\t\t\t<Link\n\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\tstyle={isActive(history, \"/user/userFeedback\")}\n\t\t\t\t\tto=\"/user/userFeedback\"\n\t\t\t\t>\n\t\t\t\t\tFeedbacks\n\t\t\t\t</Link>\n\t\t\t</li>\n\n\t\t\t{isAuthenticated() && isAuthenticated().user.role === 0 && (\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\tstyle={isActive(history, \"/user/dashboard\")}\n\t\t\t\t\t\tto=\"/user/dashboard\"\n\t\t\t\t\t>\n\t\t\t\t\t\tDashboard\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)}\n\n\t\t\t{isAuthenticated() && isAuthenticated().user.role === 1 && (\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\tstyle={isActive(history, \"/admin/dashboard\")}\n\t\t\t\t\t\tto=\"/admin/dashboard\"\n\t\t\t\t\t>\n\t\t\t\t\t\tDashboard\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)}\n\n\t\t\t{!isAuthenticated() && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\t\tstyle={isActive(history, \"/signin\")}\n\t\t\t\t\t\t\tto=\"/signin\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSignin\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\t\tstyle={isActive(history, \"/signup\")}\n\t\t\t\t\t\t\tto=\"/signup\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSignup\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</Fragment>\n\t\t\t)}\n\n\t\t\t{isAuthenticated() && (\n\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"nav-link\"\n\t\t\t\t\t\tstyle={{ cursor: \"pointer\", color: \"#ffffff\" }}\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tsignout(() => {\n\t\t\t\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign Out\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t)}\n\n\t\t\t{isAuthenticated() && isAuthenticated().user.role === 1 && (\n\t\t\t\t<li\n\t\t\t\t\tclassName=\"nav-item\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\t\tfontSize: \"18px\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tclassName=\"nav-link tool\"\n\t\t\t\t\t\tstyle={isActive(history, \"/admin/updateBackground\")}\n\t\t\t\t\t\tto=\"/admin/updateBackground\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToolFilled />\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</ul>\n\t</div>\n);\n\nexport default withRouter(Menu);\n","C:\\Users\\ajpim\\Desktop\\DLVL-UPDATED\\ecommerce_frontend\\src\\core\\ShowImage.js",[],{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":19,"column":8,"nodeType":"298","messageId":"299","endLine":19,"endColumn":11},{"ruleId":"296","severity":1,"message":"300","line":20,"column":8,"nodeType":"298","messageId":"299","endLine":20,"endColumn":16},{"ruleId":"296","severity":1,"message":"301","line":1,"column":38,"nodeType":"298","messageId":"299","endLine":1,"endColumn":57},{"ruleId":"296","severity":1,"message":"302","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":14},{"ruleId":"296","severity":1,"message":"303","line":18,"column":33,"nodeType":"298","messageId":"299","endLine":18,"endColumn":38},{"ruleId":"304","severity":1,"message":"305","line":32,"column":5,"nodeType":"306","endLine":32,"endColumn":7,"suggestions":"307"},{"ruleId":"296","severity":1,"message":"308","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":25},{"ruleId":"296","severity":1,"message":"302","line":6,"column":10,"nodeType":"298","messageId":"299","endLine":6,"endColumn":14},{"ruleId":"296","severity":1,"message":"309","line":1,"column":27,"nodeType":"298","messageId":"299","endLine":1,"endColumn":36},{"ruleId":"296","severity":1,"message":"310","line":13,"column":2,"nodeType":"298","messageId":"299","endLine":13,"endColumn":7},{"ruleId":"304","severity":1,"message":"311","line":54,"column":5,"nodeType":"306","endLine":54,"endColumn":28,"suggestions":"312"},{"ruleId":"304","severity":1,"message":"313","line":29,"column":5,"nodeType":"306","endLine":29,"endColumn":7,"suggestions":"314"},{"ruleId":"296","severity":1,"message":"303","line":12,"column":12,"nodeType":"298","messageId":"299","endLine":12,"endColumn":17},{"ruleId":"296","severity":1,"message":"315","line":20,"column":19,"nodeType":"298","messageId":"299","endLine":20,"endColumn":27},{"ruleId":"304","severity":1,"message":"316","line":84,"column":8,"nodeType":"306","endLine":84,"endColumn":10,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":90,"column":22,"nodeType":"320","messageId":"321","endLine":90,"endColumn":24},{"ruleId":"296","severity":1,"message":"303","line":10,"column":9,"nodeType":"298","messageId":"299","endLine":10,"endColumn":14},{"ruleId":"296","severity":1,"message":"322","line":11,"column":15,"nodeType":"298","messageId":"299","endLine":11,"endColumn":22},{"ruleId":"296","severity":1,"message":"303","line":9,"column":12,"nodeType":"298","messageId":"299","endLine":9,"endColumn":17},{"ruleId":"296","severity":1,"message":"323","line":5,"column":18,"nodeType":"298","messageId":"299","endLine":5,"endColumn":28},{"ruleId":"296","severity":1,"message":"324","line":5,"column":30,"nodeType":"298","messageId":"299","endLine":5,"endColumn":39},{"ruleId":"318","severity":1,"message":"319","line":23,"column":68,"nodeType":"320","messageId":"321","endLine":23,"endColumn":70},{"ruleId":"296","severity":1,"message":"325","line":1,"column":16,"nodeType":"298","messageId":"299","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"325","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":26},{"ruleId":"296","severity":1,"message":"302","line":4,"column":9,"nodeType":"298","messageId":"299","endLine":4,"endColumn":13},{"ruleId":"296","severity":1,"message":"326","line":40,"column":9,"nodeType":"298","messageId":"299","endLine":40,"endColumn":17},{"ruleId":"296","severity":1,"message":"327","line":41,"column":9,"nodeType":"298","messageId":"299","endLine":41,"endColumn":20},{"ruleId":"296","severity":1,"message":"328","line":42,"column":9,"nodeType":"298","messageId":"299","endLine":42,"endColumn":17},{"ruleId":"296","severity":1,"message":"329","line":54,"column":9,"nodeType":"298","messageId":"299","endLine":54,"endColumn":26},{"ruleId":"304","severity":1,"message":"330","line":78,"column":7,"nodeType":"306","endLine":78,"endColumn":9,"suggestions":"331"},{"ruleId":"296","severity":1,"message":"302","line":4,"column":9,"nodeType":"298","messageId":"299","endLine":4,"endColumn":13},{"ruleId":"304","severity":1,"message":"332","line":41,"column":7,"nodeType":"306","endLine":41,"endColumn":9,"suggestions":"333"},{"ruleId":"296","severity":1,"message":"302","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":14},{"ruleId":"296","severity":1,"message":"326","line":42,"column":3,"nodeType":"298","messageId":"299","endLine":42,"endColumn":11},{"ruleId":"296","severity":1,"message":"327","line":43,"column":3,"nodeType":"298","messageId":"299","endLine":43,"endColumn":14},{"ruleId":"296","severity":1,"message":"328","line":44,"column":3,"nodeType":"298","messageId":"299","endLine":44,"endColumn":11},{"ruleId":"304","severity":1,"message":"334","line":112,"column":5,"nodeType":"306","endLine":112,"endColumn":7,"suggestions":"335"},{"ruleId":"336","severity":1,"message":"337","line":133,"column":17,"nodeType":"338","endLine":133,"endColumn":47},{"ruleId":"296","severity":1,"message":"339","line":3,"column":17,"nodeType":"298","messageId":"299","endLine":3,"endColumn":25},{"ruleId":"304","severity":1,"message":"340","line":56,"column":5,"nodeType":"306","endLine":56,"endColumn":7,"suggestions":"341"},{"ruleId":"296","severity":1,"message":"309","line":2,"column":26,"nodeType":"298","messageId":"299","endLine":2,"endColumn":35},{"ruleId":"296","severity":1,"message":"302","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":14},{"ruleId":"296","severity":1,"message":"342","line":5,"column":16,"nodeType":"298","messageId":"299","endLine":5,"endColumn":24},{"ruleId":"296","severity":1,"message":"343","line":6,"column":25,"nodeType":"298","messageId":"299","endLine":6,"endColumn":38},{"ruleId":"296","severity":1,"message":"344","line":7,"column":10,"nodeType":"298","messageId":"299","endLine":7,"endColumn":17},{"ruleId":"296","severity":1,"message":"345","line":25,"column":3,"nodeType":"298","messageId":"299","endLine":25,"endColumn":11},{"ruleId":"296","severity":1,"message":"309","line":2,"column":27,"nodeType":"298","messageId":"299","endLine":2,"endColumn":36},{"ruleId":"296","severity":1,"message":"302","line":5,"column":10,"nodeType":"298","messageId":"299","endLine":5,"endColumn":14},{"ruleId":"296","severity":1,"message":"342","line":5,"column":16,"nodeType":"298","messageId":"299","endLine":5,"endColumn":24},{"ruleId":"346","severity":1,"message":"347","line":49,"column":26,"nodeType":"348","messageId":"349","endLine":49,"endColumn":28},{"ruleId":"346","severity":1,"message":"347","line":66,"column":26,"nodeType":"348","messageId":"349","endLine":66,"endColumn":28},{"ruleId":"346","severity":1,"message":"347","line":83,"column":26,"nodeType":"348","messageId":"349","endLine":83,"endColumn":28},{"ruleId":"346","severity":1,"message":"347","line":160,"column":30,"nodeType":"348","messageId":"349","endLine":160,"endColumn":32},{"ruleId":"296","severity":1,"message":"350","line":11,"column":11,"nodeType":"298","messageId":"299","endLine":11,"endColumn":14},{"ruleId":"296","severity":1,"message":"309","line":1,"column":26,"nodeType":"298","messageId":"299","endLine":1,"endColumn":35},{"ruleId":"296","severity":1,"message":"302","line":3,"column":9,"nodeType":"298","messageId":"299","endLine":3,"endColumn":13},{"ruleId":"296","severity":1,"message":"351","line":5,"column":32,"nodeType":"298","messageId":"299","endLine":5,"endColumn":49},{"ruleId":"346","severity":1,"message":"347","line":37,"column":35,"nodeType":"348","messageId":"349","endLine":37,"endColumn":37},{"ruleId":"318","severity":1,"message":"319","line":39,"column":30,"nodeType":"320","messageId":"321","endLine":39,"endColumn":32},{"ruleId":"352","severity":1,"message":"353","line":39,"column":41,"nodeType":"354","messageId":"355","endLine":39,"endColumn":43},{"ruleId":"352","severity":1,"message":"353","line":39,"column":84,"nodeType":"354","messageId":"355","endLine":39,"endColumn":86},{"ruleId":"352","severity":1,"message":"356","line":39,"column":84,"nodeType":"354","messageId":"355","endLine":39,"endColumn":86},{"ruleId":"318","severity":1,"message":"319","line":40,"column":30,"nodeType":"320","messageId":"321","endLine":40,"endColumn":32},{"ruleId":"352","severity":1,"message":"356","line":40,"column":42,"nodeType":"354","messageId":"355","endLine":40,"endColumn":44},{"ruleId":"352","severity":1,"message":"356","line":40,"column":83,"nodeType":"354","messageId":"355","endLine":40,"endColumn":85},{"ruleId":"318","severity":1,"message":"319","line":41,"column":30,"nodeType":"320","messageId":"321","endLine":41,"endColumn":32},{"ruleId":"352","severity":1,"message":"356","line":41,"column":41,"nodeType":"354","messageId":"355","endLine":41,"endColumn":43},{"ruleId":"352","severity":1,"message":"356","line":41,"column":84,"nodeType":"354","messageId":"355","endLine":41,"endColumn":86},{"ruleId":"318","severity":1,"message":"319","line":42,"column":30,"nodeType":"320","messageId":"321","endLine":42,"endColumn":32},{"ruleId":"352","severity":1,"message":"356","line":42,"column":45,"nodeType":"354","messageId":"355","endLine":42,"endColumn":47},{"ruleId":"318","severity":1,"message":"319","line":137,"column":136,"nodeType":"320","messageId":"321","endLine":137,"endColumn":138},{"ruleId":"318","severity":1,"message":"319","line":142,"column":137,"nodeType":"320","messageId":"321","endLine":142,"endColumn":139},{"ruleId":"318","severity":1,"message":"319","line":147,"column":136,"nodeType":"320","messageId":"321","endLine":147,"endColumn":138},{"ruleId":"318","severity":1,"message":"319","line":152,"column":140,"nodeType":"320","messageId":"321","endLine":152,"endColumn":142},{"ruleId":"318","severity":1,"message":"319","line":139,"column":95,"nodeType":"320","messageId":"321","endLine":139,"endColumn":97},{"ruleId":"296","severity":1,"message":"309","line":1,"column":26,"nodeType":"298","messageId":"299","endLine":1,"endColumn":35},{"ruleId":"296","severity":1,"message":"309","line":1,"column":26,"nodeType":"298","messageId":"299","endLine":1,"endColumn":35},{"ruleId":"296","severity":1,"message":"357","line":1,"column":37,"nodeType":"298","messageId":"299","endLine":1,"endColumn":45},{"ruleId":"296","severity":1,"message":"358","line":4,"column":12,"nodeType":"298","messageId":"299","endLine":4,"endColumn":17},{"ruleId":"318","severity":1,"message":"319","line":49,"column":19,"nodeType":"320","messageId":"321","endLine":49,"endColumn":21},"no-native-reassign",["359"],"no-negated-in-lhs",["360"],"no-unused-vars","'FAQ' is defined but never used.","Identifier","unusedVar","'Feedback' is defined but never used.","'useImperativeHandle' is defined but never used.","'Link' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.","ArrayExpression",["361"],"'isAuthenticated' is defined but never used.","'useEffect' is defined but never used.","'Table' is defined but never used.","React Hook useEffect has a missing dependency: 'paginate'. Either include it or remove the dependency array.",["362"],"React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.",["363"],"'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["364"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setDesc' is assigned a value but never used.","'removeItem' is defined but never used.","'emptyCart' is defined but never used.","'Component' is defined but never used.","'category' is assigned a value but never used.","'_collection' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["365"],"React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["366"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["367"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["368"],"'Redirect' is defined but never used.","'removeAboutUs' is defined but never used.","'getDesc' is defined but never used.","'formData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'_id' is assigned a value but never used.","'syncCarttoCatalog' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'Fragment' is defined but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"385","text":"386"},"Update the dependencies array to be: [currentPage, feedback, paginate]",{"range":"387","text":"388"},"Update the dependencies array to be: [_id, token]",{"range":"389","text":"390"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"391","text":"392"},"Update the dependencies array to be: [init]",{"range":"393","text":"394"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"395","text":"396"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"397","text":"398"},"Update the dependencies array to be: [token]",{"range":"399","text":"400"},[789,791],"[init, match.params.userId]",[1210,1233],"[currentPage, feedback, paginate]",[665,667],"[_id, token]",[2549,2551],"[limit, loadFilteredResults, myFilters.filters, skip]",[1955,1957],"[init]",[1129,1131],"[loadOrders, loadStatusValues]",[2696,2698],"[init, match.params.productId]",[1341,1343],"[token]"]